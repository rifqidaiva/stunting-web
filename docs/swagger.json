{
    "swagger": "2.0",
    "info": {
        "description": "API for managing stunting data",
        "title": "Stunting Web API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.0.2"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/admin/delete": {
            "delete": {
                "description": "Deletes a sufferer by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete a sufferer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sufferer ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sufferer deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Missing sufferer ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Sufferer ID not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/get": {
            "get": {
                "description": "Retrieves all sufferers from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get all sufferers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/object.Sufferer"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/get/geojson": {
            "get": {
                "description": "Retrieves GeoJSON data of all sufferers from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get GeoJSON of all sufferers",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/object.GeoJson"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/insert": {
            "post": {
                "description": "Inserts a new sufferer into the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Insert a new sufferer",
                "parameters": [
                    {
                        "description": "Sufferer data",
                        "name": "sufferer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Sufferer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sufferer added successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/update": {
            "put": {
                "description": "Updates a sufferer by ID. Only the fields you want to update need to be included in the request body (partial update).\nThe 'id' field is required to identify the sufferer to update.\nThe 'reported_by_id' field must NOT be included in the request body.\nOther fields (such as name, nik, date_of_birth, coordinates, status) can be included as needed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update a sufferer",
                "parameters": [
                    {
                        "description": "Sufferer data to update (only fields to be updated, id and reported_by_id are required)",
                        "name": "sufferer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.Sufferer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sufferer updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Sufferer ID not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "object.GeoFeature": {
            "type": "object",
            "properties": {
                "geometry": {
                    "$ref": "#/definitions/object.GeoGeometry"
                },
                "properties": {
                    "$ref": "#/definitions/object.GeoProperties"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "object.GeoGeometry": {
            "type": "object",
            "properties": {
                "coordinates": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "object.GeoJson": {
            "type": "object",
            "properties": {
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.GeoFeature"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "object.GeoProperties": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "reported_by_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "object.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "object.Sufferer": {
            "type": "object",
            "properties": {
                "coordinates": {
                    "description": "[longitude, latitude]",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "date_of_birth": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "reported_by_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}