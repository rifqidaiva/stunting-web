{
    "swagger": "2.0",
    "info": {
        "description": "API for managing stunting data",
        "title": "Stunting Web API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.0.2"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/admin/balita/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete balita data by setting deleted_date and deleted_id (Admin only)\n\nPerforms soft delete operation:\n- Sets deleted_date to current timestamp\n- Sets deleted_id to current user ID\n- Data remains in database but is excluded from queries\n- Can be restored if needed in the future\n- Checks for related records before deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete balita data (soft delete)",
                "parameters": [
                    {
                        "description": "Balita ID to delete",
                        "name": "balita",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.deleteBalitaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balita deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.deleteBalitaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Balita not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/balita/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get balita data based on query parameter (Admin only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all balita with total count\n- With id parameter: Returns specific balita data\n\nBalita data includes: nama, tanggal_lahir, jenis_kelamin, berat_lahir, tinggi_lahir, umur, keluarga info, location info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get balita data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Balita ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balita data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.getAllBalitaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Balita not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/balita/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new balita data (Admin only)\n\nInserts balita record with data including:\n- id_keluarga, nama, tanggal_lahir, jenis_kelamin\n- berat_lahir (in grams), tinggi_lahir (in cm)\n- Validates keluarga existence and balita age criteria (under 5 years)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Insert new balita",
                "parameters": [
                    {
                        "description": "Balita data",
                        "name": "balita",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.insertBalitaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balita inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.insertBalitaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/balita/restore": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Restore soft deleted balita data by clearing deleted_date and deleted_id (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Restore deleted balita data",
                "parameters": [
                    {
                        "description": "Balita ID to restore",
                        "name": "balita",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.deleteBalitaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balita restored successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.deleteBalitaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Balita not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/balita/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing balita data (Admin only)\n\nUpdates balita record with new data including:\n- id_keluarga, nama, tanggal_lahir, jenis_kelamin\n- berat_lahir (in grams), tinggi_lahir (in cm)\n- Validates keluarga existence, balita age criteria, and prevents duplicates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update balita data",
                "parameters": [
                    {
                        "description": "Updated balita data",
                        "name": "balita",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateBalitaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balita updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.updateBalitaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Balita not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/keluarga/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete keluarga data by setting deleted_date and deleted_id (Admin only)\n\nPerforms soft delete operation:\n- Sets deleted_date to current timestamp\n- Sets deleted_id to current user ID\n- Data remains in database but is excluded from queries\n- Can be restored if needed in the future",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete keluarga data (soft delete)",
                "parameters": [
                    {
                        "description": "Keluarga ID to delete",
                        "name": "keluarga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.deleteKeluargaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keluarga deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.deleteKeluargaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Keluarga not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/keluarga/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get keluarga data based on query parameter (Admin only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all keluarga with total count\n- With id parameter: Returns specific keluarga data\n\nKeluarga data includes: nomor_kk, nama_ayah, nama_ibu, nik_ayah, nik_ibu, alamat, rt, rw, kelurahan, kecamatan, koordinat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get keluarga data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keluarga ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keluarga data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.getAllKeluargaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Keluarga not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/keluarga/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new keluarga data (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Insert new keluarga",
                "parameters": [
                    {
                        "description": "Keluarga data",
                        "name": "keluarga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.insertKeluargaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keluarga inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.insertKeluargaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/keluarga/restore": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Restore soft deleted keluarga data by clearing deleted_date and deleted_id (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Restore deleted keluarga data",
                "parameters": [
                    {
                        "description": "Keluarga ID to restore",
                        "name": "keluarga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.deleteKeluargaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keluarga restored successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.deleteKeluargaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Keluarga not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/keluarga/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing keluarga data (Admin only)\n\nUpdates keluarga record with new data including:\n- nomor_kk, nama_ayah, nama_ibu, nik_ayah, nik_ibu\n- alamat, rt, rw, id_kelurahan, koordinat\n- Validates uniqueness of nomor_kk and NIK (excluding current record)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update keluarga data",
                "parameters": [
                    {
                        "description": "Updated keluarga data",
                        "name": "keluarga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateKeluargaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keluarga updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.updateKeluargaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Keluarga not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/laporan-masyarakat/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete laporan masyarakat data by setting deleted_date and deleted_id (Admin only)\n\nPerforms soft delete operation:\n- Sets deleted_date to current timestamp\n- Sets deleted_id to current user ID\n- Data remains in database but is excluded from queries\n- Can be restored if needed in the future\n- Checks for related records before deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete laporan masyarakat data (soft delete)",
                "parameters": [
                    {
                        "description": "Laporan Masyarakat ID to delete",
                        "name": "laporan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.deleteLaporanMasyarakatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Laporan masyarakat deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.deleteLaporanMasyarakatResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Laporan masyarakat not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/laporan-masyarakat/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get laporan masyarakat data based on query parameter (Admin only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all laporan masyarakat with total count\n- With id parameter: Returns specific laporan masyarakat data\n\nLaporan masyarakat data includes: pelapor info, balita info, keluarga info, status laporan, contact details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get laporan masyarakat data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Laporan Masyarakat ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Laporan masyarakat data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.getAllLaporanMasyarakatResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Laporan masyarakat not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/laporan-masyarakat/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new laporan masyarakat data (Admin only)\n\nInserts laporan masyarakat record with data including:\n- id_masyarakat (optional, null if admin report), id_balita, id_status_laporan\n- tanggal_laporan, hubungan_dengan_balita, nomor_hp_pelapor, nomor_hp_keluarga_balita\n- Validates balita existence, status laporan, and masyarakat (if provided)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Insert new laporan masyarakat",
                "parameters": [
                    {
                        "description": "Laporan masyarakat data",
                        "name": "laporan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.insertLaporanMasyarakatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Laporan masyarakat inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.insertLaporanMasyarakatResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/laporan-masyarakat/restore": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Restore soft deleted laporan masyarakat data by clearing deleted_date and deleted_id (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Restore deleted laporan masyarakat data",
                "parameters": [
                    {
                        "description": "Laporan Masyarakat ID to restore",
                        "name": "laporan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.deleteLaporanMasyarakatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Laporan masyarakat restored successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.deleteLaporanMasyarakatResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Laporan masyarakat not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/laporan-masyarakat/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing laporan masyarakat data (Admin only)\n\nUpdates laporan masyarakat record with new data including:\n- id_masyarakat (optional, null if admin report), id_balita, id_status_laporan\n- tanggal_laporan, hubungan_dengan_balita, nomor_hp_pelapor, nomor_hp_keluarga_balita\n- Validates balita existence, status laporan, masyarakat (if provided), and prevents duplicates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update laporan masyarakat data",
                "parameters": [
                    {
                        "description": "Updated laporan masyarakat data",
                        "name": "laporan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateLaporanMasyarakatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Laporan masyarakat updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.updateLaporanMasyarakatResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Laporan masyarakat not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/petugas-kesehatan": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get petugas kesehatan data based on query parameter (Admin only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all petugas kesehatan with total count\n- With id parameter: Returns specific petugas kesehatan data\n\nPetugas kesehatan data includes: nama, email, SKPD info, intervensi count, creation/update dates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get petugas kesehatan data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Petugas Kesehatan ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Petugas kesehatan data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.getAllPetugasKesehatanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Petugas kesehatan not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/petugas-kesehatan/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete petugas kesehatan data by setting deleted_date and deleted_id (Admin only)\n\nPerforms soft delete operation:\n- Sets deleted_date to current timestamp\n- Sets deleted_id to current user ID\n- Data remains in database but is excluded from queries\n- Can be restored if needed in the future\n- Checks for related records before deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete petugas kesehatan data (soft delete)",
                "parameters": [
                    {
                        "description": "Petugas Kesehatan ID to delete",
                        "name": "petugas",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.deletePetugasKesehatanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Petugas kesehatan deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.deletePetugasKesehatanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Petugas kesehatan not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/petugas-kesehatan/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new petugas kesehatan data (Admin only)\n\nCreates a complete petugas kesehatan record including:\n- Creates pengguna account with email and hashed password\n- Creates petugas_kesehatan record linked to SKPD\n- Sets role as \"petugas kesehatan\" in pengguna table\n- Validates email uniqueness and SKPD existence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Insert new petugas kesehatan",
                "parameters": [
                    {
                        "description": "Petugas kesehatan data",
                        "name": "petugas",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.insertPetugasKesehatanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Petugas kesehatan inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.insertPetugasKesehatanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/petugas-kesehatan/restore": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Restore soft deleted petugas kesehatan data by clearing deleted_date and deleted_id (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Restore deleted petugas kesehatan data",
                "parameters": [
                    {
                        "description": "Petugas Kesehatan ID to restore",
                        "name": "petugas",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.deletePetugasKesehatanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Petugas kesehatan restored successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.deletePetugasKesehatanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Petugas kesehatan not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/petugas-kesehatan/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing petugas kesehatan data (Admin only)\n\nUpdates petugas kesehatan record including:\n- Updates pengguna account (email and optionally password)\n- Updates petugas_kesehatan record (nama and SKPD)\n- Validates email uniqueness (excluding current record)\n- Validates SKPD existence and name uniqueness within SKPD\n- Checks for related intervensi before allowing SKPD change",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update petugas kesehatan data",
                "parameters": [
                    {
                        "description": "Updated petugas kesehatan data",
                        "name": "petugas",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updatePetugasKesehatanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Petugas kesehatan updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.updatePetugasKesehatanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Petugas kesehatan not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/skpd/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete SKPD data by setting deleted_date and deleted_id (Admin only)\n\nPerforms soft delete operation:\n- Sets deleted_date to current timestamp\n- Sets deleted_id to current user ID\n- Data remains in database but is excluded from queries\n- Can be restored if needed in the future\n- Checks for related records before deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete SKPD data (soft delete)",
                "parameters": [
                    {
                        "description": "SKPD ID to delete",
                        "name": "skpd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.deleteSkpdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SKPD deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.deleteSkpdResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "SKPD not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/skpd/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get SKPD data based on query parameter (Admin only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all SKPD with total count\n- With id parameter: Returns specific SKPD data\n\nSKPD data includes: skpd name, jenis (type), petugas count, creation/update dates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get SKPD data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SKPD ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SKPD data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.getAllSkpdResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "SKPD not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/skpd/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new SKPD data (Admin only)\n\nInserts SKPD record with data including:\n- skpd (nama SKPD), jenis (puskesmas/kelurahan/skpd)\n- Validates uniqueness of SKPD name within the same jenis\n- Supports different types of SKPD organizations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Insert new SKPD",
                "parameters": [
                    {
                        "description": "SKPD data",
                        "name": "skpd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.insertSkpdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SKPD inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.insertSkpdResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/skpd/restore": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Restore soft deleted SKPD data by clearing deleted_date and deleted_id (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Restore deleted SKPD data",
                "parameters": [
                    {
                        "description": "SKPD ID to restore",
                        "name": "skpd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.deleteSkpdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SKPD restored successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.deleteSkpdResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "SKPD not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/skpd/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing SKPD data (Admin only)\n\nUpdates SKPD record with new data including:\n- skpd (nama SKPD), jenis (puskesmas/kelurahan/skpd)\n- Validates uniqueness of SKPD name within the same jenis (excluding current record)\n- Checks for related petugas kesehatan before allowing jenis change",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update SKPD data",
                "parameters": [
                    {
                        "description": "Updated SKPD data",
                        "name": "skpd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateSkpdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SKPD updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.updateSkpdResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "SKPD not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "Login with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/auth.loginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/auth/profile": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get user profile data based on JWT token and role\n\nResponse data varies by role:\n- masyarakat: {id, nama, alamat}\n- petugas kesehatan: {id, id_skpd, nama, created_date}\n- admin: {nama: \"Administrator\"}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/auth.userProfileResponse"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "data": {
                                                            "type": "object"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Register a new user with email, nama, password, and alamat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "description": "Register request",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.registerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.balitaResponse": {
            "type": "object",
            "properties": {
                "berat_lahir": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_keluarga": {
                    "type": "string"
                },
                "jenis_kelamin": {
                    "type": "string"
                },
                "kecamatan": {
                    "type": "string"
                },
                "kelurahan": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "tanggal_lahir": {
                    "type": "string"
                },
                "tinggi_lahir": {
                    "type": "string"
                },
                "umur": {
                    "description": "calculated field in months",
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "api.deleteBalitaRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.deleteBalitaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.deleteKeluargaRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.deleteKeluargaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.deleteLaporanMasyarakatRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.deleteLaporanMasyarakatResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.deletePetugasKesehatanRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.deletePetugasKesehatanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.deleteSkpdRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.deleteSkpdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.getAllBalitaResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.balitaResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.getAllKeluargaResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.keluargaResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.getAllLaporanMasyarakatResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.laporanMasyarakatResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.getAllPetugasKesehatanResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.petugasKesehatanResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.getAllSkpdResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.skpdResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.insertBalitaRequest": {
            "type": "object",
            "properties": {
                "berat_lahir": {
                    "description": "in grams",
                    "type": "string"
                },
                "id_keluarga": {
                    "type": "string"
                },
                "jenis_kelamin": {
                    "description": "\"L\" or \"P\"",
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "tanggal_lahir": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                },
                "tinggi_lahir": {
                    "description": "in cm",
                    "type": "string"
                }
            }
        },
        "api.insertBalitaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.insertKeluargaRequest": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "id_kelurahan": {
                    "type": "string"
                },
                "koordinat": {
                    "description": "[longitude, latitude]",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nik_ayah": {
                    "type": "string"
                },
                "nik_ibu": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "rt": {
                    "type": "string"
                },
                "rw": {
                    "type": "string"
                }
            }
        },
        "api.insertKeluargaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.insertLaporanMasyarakatRequest": {
            "type": "object",
            "properties": {
                "hubungan_dengan_balita": {
                    "type": "string"
                },
                "id_balita": {
                    "type": "string"
                },
                "id_masyarakat": {
                    "description": "dapat null jika laporan dari admin",
                    "type": "string"
                },
                "id_status_laporan": {
                    "type": "string"
                },
                "nomor_hp_keluarga_balita": {
                    "type": "string"
                },
                "nomor_hp_pelapor": {
                    "type": "string"
                },
                "tanggal_laporan": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                }
            }
        },
        "api.insertLaporanMasyarakatResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.insertPetugasKesehatanRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id_skpd": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "api.insertPetugasKesehatanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.insertSkpdRequest": {
            "type": "object",
            "properties": {
                "jenis": {
                    "description": "\"puskesmas\", \"kelurahan\", \"skpd\"",
                    "type": "string"
                },
                "skpd": {
                    "type": "string"
                }
            }
        },
        "api.insertSkpdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.keluargaResponse": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_kelurahan": {
                    "type": "string"
                },
                "kecamatan": {
                    "type": "string"
                },
                "kelurahan": {
                    "type": "string"
                },
                "koordinat": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nik_ayah": {
                    "type": "string"
                },
                "nik_ibu": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "rt": {
                    "type": "string"
                },
                "rw": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "api.laporanMasyarakatResponse": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "email_pelapor": {
                    "type": "string"
                },
                "hubungan_dengan_balita": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_balita": {
                    "type": "string"
                },
                "id_masyarakat": {
                    "type": "string"
                },
                "id_status_laporan": {
                    "type": "string"
                },
                "jenis_laporan": {
                    "description": "\"masyarakat\" atau \"admin\"",
                    "type": "string"
                },
                "kecamatan": {
                    "type": "string"
                },
                "kelurahan": {
                    "type": "string"
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_balita": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nama_pelapor": {
                    "type": "string"
                },
                "nomor_hp_keluarga_balita": {
                    "type": "string"
                },
                "nomor_hp_pelapor": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "status_laporan": {
                    "type": "string"
                },
                "tanggal_laporan": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "api.petugasKesehatanResponse": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_pengguna": {
                    "type": "string"
                },
                "id_skpd": {
                    "type": "string"
                },
                "intervensi_count": {
                    "description": "jumlah intervensi terkait",
                    "type": "integer"
                },
                "jenis_skpd": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "skpd": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "api.skpdResponse": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "jenis": {
                    "type": "string"
                },
                "petugas_count": {
                    "description": "jumlah petugas kesehatan terkait",
                    "type": "integer"
                },
                "skpd": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "api.updateBalitaRequest": {
            "type": "object",
            "properties": {
                "berat_lahir": {
                    "description": "in grams",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_keluarga": {
                    "type": "string"
                },
                "jenis_kelamin": {
                    "description": "\"L\" or \"P\"",
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "tanggal_lahir": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                },
                "tinggi_lahir": {
                    "description": "in cm",
                    "type": "string"
                }
            }
        },
        "api.updateBalitaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.updateKeluargaRequest": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_kelurahan": {
                    "type": "string"
                },
                "koordinat": {
                    "description": "[longitude, latitude]",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nik_ayah": {
                    "type": "string"
                },
                "nik_ibu": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "rt": {
                    "type": "string"
                },
                "rw": {
                    "type": "string"
                }
            }
        },
        "api.updateKeluargaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.updateLaporanMasyarakatRequest": {
            "type": "object",
            "properties": {
                "hubungan_dengan_balita": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_balita": {
                    "type": "string"
                },
                "id_masyarakat": {
                    "description": "dapat null jika laporan dari admin",
                    "type": "string"
                },
                "id_status_laporan": {
                    "type": "string"
                },
                "nomor_hp_keluarga_balita": {
                    "type": "string"
                },
                "nomor_hp_pelapor": {
                    "type": "string"
                },
                "tanggal_laporan": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                }
            }
        },
        "api.updateLaporanMasyarakatResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.updatePetugasKesehatanRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_skpd": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "password": {
                    "description": "Optional - only update if provided",
                    "type": "string"
                }
            }
        },
        "api.updatePetugasKesehatanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.updateSkpdRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jenis": {
                    "description": "\"puskesmas\", \"kelurahan\", \"skpd\"",
                    "type": "string"
                },
                "skpd": {
                    "type": "string"
                }
            }
        },
        "api.updateSkpdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "auth.loginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.loginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.registerRequest": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.userProfileResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "object.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        }
    }
}