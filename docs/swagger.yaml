definitions:
  api.deleteKeluargaRequest:
    properties:
      id:
        type: string
    type: object
  api.deleteKeluargaResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  api.getAllKeluargaResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.keluargaResponse'
        type: array
      total:
        type: integer
    type: object
  api.insertKeluargaRequest:
    properties:
      alamat:
        type: string
      id_kelurahan:
        type: string
      koordinat:
        description: '[longitude, latitude]'
        items:
          type: number
        type: array
      nama_ayah:
        type: string
      nama_ibu:
        type: string
      nik_ayah:
        type: string
      nik_ibu:
        type: string
      nomor_kk:
        type: string
      rt:
        type: string
      rw:
        type: string
    type: object
  api.insertKeluargaResponse:
    properties:
      id:
        type: string
    type: object
  api.keluargaResponse:
    properties:
      alamat:
        type: string
      created_date:
        type: string
      id:
        type: string
      id_kelurahan:
        type: string
      kecamatan:
        type: string
      kelurahan:
        type: string
      koordinat:
        items:
          type: number
        type: array
      nama_ayah:
        type: string
      nama_ibu:
        type: string
      nik_ayah:
        type: string
      nik_ibu:
        type: string
      nomor_kk:
        type: string
      rt:
        type: string
      rw:
        type: string
      updated_date:
        type: string
    type: object
  api.updateKeluargaRequest:
    properties:
      alamat:
        type: string
      id:
        type: string
      id_kelurahan:
        type: string
      koordinat:
        description: '[longitude, latitude]'
        items:
          type: number
        type: array
      nama_ayah:
        type: string
      nama_ibu:
        type: string
      nik_ayah:
        type: string
      nik_ibu:
        type: string
      nomor_kk:
        type: string
      rt:
        type: string
      rw:
        type: string
    type: object
  api.updateKeluargaResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  auth.loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth.loginResponse:
    properties:
      token:
        type: string
    type: object
  auth.registerRequest:
    properties:
      alamat:
        type: string
      email:
        type: string
      nama:
        type: string
      password:
        type: string
    type: object
  auth.userProfileResponse:
    properties:
      data: {}
      email:
        type: string
      id:
        type: string
      role:
        type: string
    type: object
  object.Response:
    properties:
      data: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    name: API Support
    url: http://www.swagger.io/support
  description: API for managing stunting data
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Stunting Web API
  version: 0.0.2
paths:
  /api/admin/keluarga/delete:
    delete:
      consumes:
      - application/json
      description: |-
        Soft delete keluarga data by setting deleted_date and deleted_id (Admin only)

        Performs soft delete operation:
        - Sets deleted_date to current timestamp
        - Sets deleted_id to current user ID
        - Data remains in database but is excluded from queries
        - Can be restored if needed in the future
      parameters:
      - description: Keluarga ID to delete
        in: body
        name: keluarga
        required: true
        schema:
          $ref: '#/definitions/api.deleteKeluargaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.deleteKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Keluarga not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Delete keluarga data (soft delete)
      tags:
      - admin
  /api/admin/keluarga/get:
    get:
      consumes:
      - application/json
      description: |-
        Get keluarga data based on query parameter (Admin only)

        Response data varies by parameter:
        - Without id parameter: Returns all keluarga with total count
        - With id parameter: Returns specific keluarga data

        Keluarga data includes: nomor_kk, nama_ayah, nama_ibu, nik_ayah, nik_ibu, alamat, rt, rw, kelurahan, kecamatan, koordinat
      parameters:
      - description: Keluarga ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.getAllKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Keluarga not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get keluarga data
      tags:
      - admin
  /api/admin/keluarga/insert:
    post:
      consumes:
      - application/json
      description: Insert new keluarga data (Admin only)
      parameters:
      - description: Keluarga data
        in: body
        name: keluarga
        required: true
        schema:
          $ref: '#/definitions/api.insertKeluargaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga inserted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.insertKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Insert new keluarga
      tags:
      - admin
  /api/admin/keluarga/restore:
    post:
      consumes:
      - application/json
      description: Restore soft deleted keluarga data by clearing deleted_date and
        deleted_id (Admin only)
      parameters:
      - description: Keluarga ID to restore
        in: body
        name: keluarga
        required: true
        schema:
          $ref: '#/definitions/api.deleteKeluargaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga restored successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.deleteKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Keluarga not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Restore deleted keluarga data
      tags:
      - admin
  /api/admin/keluarga/update:
    put:
      consumes:
      - application/json
      description: |-
        Update existing keluarga data (Admin only)

        Updates keluarga record with new data including:
        - nomor_kk, nama_ayah, nama_ibu, nik_ayah, nik_ibu
        - alamat, rt, rw, id_kelurahan, koordinat
        - Validates uniqueness of nomor_kk and NIK (excluding current record)
      parameters:
      - description: Updated keluarga data
        in: body
        name: keluarga
        required: true
        schema:
          $ref: '#/definitions/api.updateKeluargaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.updateKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Keluarga not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Update keluarga data
      tags:
      - admin
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login with email and password
      parameters:
      - description: Login request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth.loginResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: User login
      tags:
      - auth
  /api/auth/profile:
    get:
      consumes:
      - application/json
      description: |-
        Get user profile data based on JWT token and role

        Response data varies by role:
        - masyarakat: {id, nama, alamat}
        - petugas kesehatan: {id, id_skpd, nama, created_date}
        - admin: {nama: "Administrator"}
      produces:
      - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/auth.userProfileResponse'
                  - properties:
                      data:
                        type: object
                    type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get user profile
      tags:
      - auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email, nama, password, and alamat
      parameters:
      - description: Register request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/auth.registerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: User registration
      tags:
      - auth
swagger: "2.0"
