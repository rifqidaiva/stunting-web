definitions:
  admin.assignIntervensiPetugasRequest:
    properties:
      id_intervensi:
        type: string
      id_petugas_kesehatan:
        type: string
    type: object
  admin.assignIntervensiPetugasResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.balitaResponse:
    properties:
      berat_lahir:
        type: string
      created_date:
        type: string
      id:
        type: string
      id_keluarga:
        type: string
      jenis_kelamin:
        type: string
      kecamatan:
        type: string
      kelurahan:
        type: string
      nama:
        type: string
      nama_ayah:
        type: string
      nama_ibu:
        type: string
      nomor_kk:
        type: string
      tanggal_lahir:
        type: string
      tinggi_lahir:
        type: string
      umur:
        description: calculated field in months
        type: string
      updated_date:
        type: string
    type: object
  admin.deleteBalitaRequest:
    properties:
      id:
        type: string
    type: object
  admin.deleteBalitaResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.deleteIntervensiRequest:
    properties:
      id:
        type: string
    type: object
  admin.deleteIntervensiResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.deleteKeluargaRequest:
    properties:
      id:
        type: string
    type: object
  admin.deleteKeluargaResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.deleteLaporanMasyarakatRequest:
    properties:
      id:
        type: string
    type: object
  admin.deleteLaporanMasyarakatResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.deletePetugasKesehatanRequest:
    properties:
      id:
        type: string
    type: object
  admin.deletePetugasKesehatanResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.deleteRiwayatPemeriksaanRequest:
    properties:
      id:
        type: string
    type: object
  admin.deleteRiwayatPemeriksaanResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.deleteSkpdRequest:
    properties:
      id:
        type: string
    type: object
  admin.deleteSkpdResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.getAllBalitaResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/admin.balitaResponse'
        type: array
      total:
        type: integer
    type: object
  admin.getAllIntervensiPetugasResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/admin.intervensiPetugasResponse'
        type: array
      total:
        type: integer
    type: object
  admin.getAllIntervensiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/admin.intervensiResponse'
        type: array
      total:
        type: integer
    type: object
  admin.getAllKecamatanResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/admin.kecamatanResponse'
        type: array
      total:
        type: integer
    type: object
  admin.getAllKeluargaResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/admin.keluargaResponse'
        type: array
      total:
        type: integer
    type: object
  admin.getAllKelurahanResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/admin.kelurahanResponse'
        type: array
      total:
        type: integer
    type: object
  admin.getAllLaporanMasyarakatResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/admin.laporanMasyarakatResponse'
        type: array
      total:
        type: integer
    type: object
  admin.getAllMasyarakatResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/admin.masyarakatResponse'
        type: array
      total:
        type: integer
    type: object
  admin.getAllPetugasKesehatanResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/admin.petugasKesehatanResponse'
        type: array
      total:
        type: integer
    type: object
  admin.getAllRiwayatPemeriksaanResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/admin.riwayatPemeriksaanResponse'
        type: array
      total:
        type: integer
    type: object
  admin.getAllSkpdMasterResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/admin.skpdMasterResponse'
        type: array
      total:
        type: integer
    type: object
  admin.getAllSkpdResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/admin.skpdResponse'
        type: array
      total:
        type: integer
    type: object
  admin.getAllStatusLaporanResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/admin.statusLaporanResponse'
        type: array
      total:
        type: integer
    type: object
  admin.insertBalitaRequest:
    properties:
      berat_lahir:
        description: in grams
        type: string
      id_keluarga:
        type: string
      jenis_kelamin:
        description: '"L" or "P"'
        type: string
      nama:
        type: string
      tanggal_lahir:
        description: 'Format: YYYY-MM-DD'
        type: string
      tinggi_lahir:
        description: in cm
        type: string
    type: object
  admin.insertBalitaResponse:
    properties:
      id:
        type: string
    type: object
  admin.insertIntervensiRequest:
    properties:
      deskripsi:
        type: string
      hasil:
        type: string
      id_balita:
        description: <- Field baru
        type: string
      jenis:
        description: '"gizi", "kesehatan", "sosial"'
        type: string
      tanggal:
        description: 'Format: YYYY-MM-DD'
        type: string
    type: object
  admin.insertIntervensiResponse:
    properties:
      id:
        type: string
    type: object
  admin.insertKeluargaRequest:
    properties:
      alamat:
        type: string
      id_kelurahan:
        type: string
      koordinat:
        description: '[longitude, latitude]'
        items:
          type: number
        type: array
      nama_ayah:
        type: string
      nama_ibu:
        type: string
      nik_ayah:
        type: string
      nik_ibu:
        type: string
      nomor_kk:
        type: string
      rt:
        type: string
      rw:
        type: string
    type: object
  admin.insertKeluargaResponse:
    properties:
      id:
        type: string
    type: object
  admin.insertLaporanMasyarakatRequest:
    properties:
      hubungan_dengan_balita:
        type: string
      id_balita:
        type: string
      id_masyarakat:
        description: dapat null jika laporan dari admin
        type: string
      id_status_laporan:
        type: string
      nomor_hp_keluarga_balita:
        type: string
      nomor_hp_pelapor:
        type: string
      tanggal_laporan:
        description: 'Format: YYYY-MM-DD'
        type: string
    type: object
  admin.insertLaporanMasyarakatResponse:
    properties:
      id:
        type: string
    type: object
  admin.insertPetugasKesehatanRequest:
    properties:
      email:
        type: string
      id_skpd:
        type: string
      nama:
        type: string
      password:
        type: string
    type: object
  admin.insertPetugasKesehatanResponse:
    properties:
      id:
        type: string
    type: object
  admin.insertRiwayatPemeriksaanRequest:
    properties:
      berat_badan:
        description: in kg (decimal)
        type: string
      id_balita:
        type: string
      id_intervensi:
        type: string
      id_laporan_masyarakat:
        description: <- Field baru wajib
        type: string
      keterangan:
        type: string
      status_gizi:
        description: '"normal", "stunting", "gizi buruk"'
        type: string
      tanggal:
        description: 'Format: YYYY-MM-DD'
        type: string
      tinggi_badan:
        description: in cm (decimal)
        type: string
    type: object
  admin.insertRiwayatPemeriksaanResponse:
    properties:
      id:
        type: string
    type: object
  admin.insertSkpdRequest:
    properties:
      jenis:
        description: '"puskesmas", "kelurahan", "skpd"'
        type: string
      skpd:
        type: string
    type: object
  admin.insertSkpdResponse:
    properties:
      id:
        type: string
    type: object
  admin.intervensiPetugasResponse:
    properties:
      deskripsi_intervensi:
        type: string
      email_petugas:
        type: string
      id:
        type: string
      id_intervensi:
        type: string
      id_petugas_kesehatan:
        type: string
      jenis_intervensi:
        type: string
      jenis_skpd:
        type: string
      nama_petugas:
        type: string
      skpd_petugas:
        type: string
      tanggal_intervensi:
        type: string
    type: object
  admin.intervensiResponse:
    properties:
      created_by:
        description: nama admin yang membuat
        type: string
      created_date:
        type: string
      deskripsi:
        type: string
      hasil:
        type: string
      id:
        type: string
      id_balita:
        description: <- Field baru
        type: string
      jenis:
        type: string
      nama_balita:
        description: <- Field baru untuk display
        type: string
      petugas_count:
        description: jumlah petugas yang di-assign
        type: integer
      riwayat_count:
        description: jumlah riwayat pemeriksaan terkait
        type: integer
      tanggal:
        type: string
      updated_by:
        description: nama admin yang mengupdate
        type: string
      updated_date:
        type: string
    type: object
  admin.kecamatanResponse:
    properties:
      id:
        type: string
      kecamatan:
        type: string
    type: object
  admin.keluargaResponse:
    properties:
      alamat:
        type: string
      created_date:
        type: string
      id:
        type: string
      id_kelurahan:
        type: string
      kecamatan:
        type: string
      kelurahan:
        type: string
      koordinat:
        items:
          type: number
        type: array
      nama_ayah:
        type: string
      nama_ibu:
        type: string
      nik_ayah:
        type: string
      nik_ibu:
        type: string
      nomor_kk:
        type: string
      rt:
        type: string
      rw:
        type: string
      updated_date:
        type: string
    type: object
  admin.kelurahanResponse:
    properties:
      id:
        type: string
      id_kecamatan:
        type: string
      kecamatan:
        type: string
      kelurahan:
        type: string
    type: object
  admin.laporanMasyarakatResponse:
    properties:
      alamat:
        type: string
      created_date:
        type: string
      email_pelapor:
        type: string
      hubungan_dengan_balita:
        type: string
      id:
        type: string
      id_balita:
        type: string
      id_masyarakat:
        type: string
      id_status_laporan:
        type: string
      jenis_laporan:
        description: '"masyarakat" atau "admin"'
        type: string
      kecamatan:
        type: string
      kelurahan:
        type: string
      nama_ayah:
        type: string
      nama_balita:
        type: string
      nama_ibu:
        type: string
      nama_pelapor:
        type: string
      nomor_hp_keluarga_balita:
        type: string
      nomor_hp_pelapor:
        type: string
      nomor_kk:
        type: string
      status_laporan:
        type: string
      tanggal_laporan:
        type: string
      updated_date:
        type: string
    type: object
  admin.masyarakatResponse:
    properties:
      alamat:
        type: string
      email:
        type: string
      id:
        type: string
      nama:
        type: string
    type: object
  admin.petugasKesehatanResponse:
    properties:
      created_date:
        type: string
      email:
        type: string
      id:
        type: string
      id_pengguna:
        type: string
      id_skpd:
        type: string
      intervensi_count:
        description: jumlah intervensi terkait
        type: integer
      jenis_skpd:
        type: string
      nama:
        type: string
      skpd:
        type: string
      updated_date:
        type: string
    type: object
  admin.removeIntervensiPetugasRequest:
    properties:
      id:
        description: ID dari tabel intervensi_petugas
        type: string
    type: object
  admin.removeIntervensiPetugasResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.riwayatPemeriksaanResponse:
    properties:
      berat_badan:
        type: string
      created_by:
        type: string
      created_date:
        type: string
      id:
        type: string
      id_balita:
        type: string
      id_intervensi:
        type: string
      id_laporan_masyarakat:
        description: <- Field baru
        type: string
      jenis_intervensi:
        type: string
      jenis_kelamin:
        type: string
      jenis_laporan:
        description: <- Field baru (masyarakat/admin)
        type: string
      kecamatan:
        type: string
      kelurahan:
        type: string
      keterangan:
        type: string
      nama_ayah:
        type: string
      nama_balita:
        type: string
      nama_ibu:
        type: string
      nomor_kk:
        type: string
      status_gizi:
        type: string
      status_laporan:
        description: <- Field baru
        type: string
      tanggal:
        type: string
      tanggal_intervensi:
        type: string
      tanggal_laporan:
        description: <- Field baru
        type: string
      tinggi_badan:
        type: string
      umur_balita:
        type: string
      updated_by:
        type: string
      updated_date:
        type: string
    type: object
  admin.skpdMasterResponse:
    properties:
      id:
        type: string
      jenis:
        type: string
      skpd:
        type: string
    type: object
  admin.skpdResponse:
    properties:
      created_date:
        type: string
      id:
        type: string
      jenis:
        type: string
      petugas_count:
        description: jumlah petugas kesehatan terkait
        type: integer
      skpd:
        type: string
      updated_date:
        type: string
    type: object
  admin.statusLaporanResponse:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
  admin.updateBalitaRequest:
    properties:
      berat_lahir:
        description: in grams
        type: string
      id:
        type: string
      id_keluarga:
        type: string
      jenis_kelamin:
        description: '"L" or "P"'
        type: string
      nama:
        type: string
      tanggal_lahir:
        description: 'Format: YYYY-MM-DD'
        type: string
      tinggi_lahir:
        description: in cm
        type: string
    type: object
  admin.updateBalitaResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.updateIntervensiRequest:
    properties:
      deskripsi:
        type: string
      hasil:
        type: string
      id:
        type: string
      id_balita:
        description: <- Field baru
        type: string
      jenis:
        description: '"gizi", "kesehatan", "sosial"'
        type: string
      tanggal:
        description: 'Format: YYYY-MM-DD'
        type: string
    type: object
  admin.updateIntervensiResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.updateKeluargaRequest:
    properties:
      alamat:
        type: string
      id:
        type: string
      id_kelurahan:
        type: string
      koordinat:
        description: '[longitude, latitude]'
        items:
          type: number
        type: array
      nama_ayah:
        type: string
      nama_ibu:
        type: string
      nik_ayah:
        type: string
      nik_ibu:
        type: string
      nomor_kk:
        type: string
      rt:
        type: string
      rw:
        type: string
    type: object
  admin.updateKeluargaResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.updateLaporanMasyarakatRequest:
    properties:
      hubungan_dengan_balita:
        type: string
      id:
        type: string
      id_balita:
        type: string
      id_masyarakat:
        description: dapat null jika laporan dari admin
        type: string
      id_status_laporan:
        type: string
      nomor_hp_keluarga_balita:
        type: string
      nomor_hp_pelapor:
        type: string
      tanggal_laporan:
        description: 'Format: YYYY-MM-DD'
        type: string
    type: object
  admin.updateLaporanMasyarakatResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.updatePetugasKesehatanRequest:
    properties:
      email:
        type: string
      id:
        type: string
      id_skpd:
        type: string
      nama:
        type: string
      password:
        description: Required - wajib diisi
        type: string
    type: object
  admin.updatePetugasKesehatanResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.updateRiwayatPemeriksaanRequest:
    properties:
      berat_badan:
        description: in kg (decimal)
        type: string
      id:
        type: string
      id_balita:
        type: string
      id_intervensi:
        type: string
      id_laporan_masyarakat:
        description: <- Field baru wajib
        type: string
      keterangan:
        type: string
      status_gizi:
        description: '"normal", "stunting", "gizi buruk"'
        type: string
      tanggal:
        description: 'Format: YYYY-MM-DD'
        type: string
      tinggi_badan:
        description: in cm (decimal)
        type: string
    type: object
  admin.updateRiwayatPemeriksaanResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  admin.updateSkpdRequest:
    properties:
      id:
        type: string
      jenis:
        description: '"puskesmas", "kelurahan", "skpd"'
        type: string
      skpd:
        type: string
    type: object
  admin.updateSkpdResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  auth.loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth.loginResponse:
    properties:
      token:
        type: string
    type: object
  auth.registerRequest:
    properties:
      alamat:
        type: string
      email:
        type: string
      nama:
        type: string
      password:
        type: string
    type: object
  auth.userProfileResponse:
    properties:
      data: {}
      email:
        type: string
      id:
        type: string
      role:
        type: string
    type: object
  object.GeoJSONFeature:
    properties:
      geometry:
        $ref: '#/definitions/object.GeoJSONGeometry'
      properties:
        additionalProperties: {}
        type: object
      type:
        type: string
    type: object
  object.GeoJSONFeatureCollection:
    properties:
      features:
        items:
          $ref: '#/definitions/object.GeoJSONFeature'
        type: array
      type:
        type: string
    type: object
  object.GeoJSONGeometry:
    properties:
      coordinates: {}
      type:
        type: string
    type: object
  object.Response:
    properties:
      data: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    name: API Support
    url: http://www.swagger.io/support
  description: API for managing stunting data
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Stunting Web API
  version: 0.0.2
paths:
  /api/admin/balita/delete:
    delete:
      consumes:
      - application/json
      description: |-
        Soft delete balita data by setting deleted_date and deleted_id (Admin only)

        Performs soft delete operation:
        - Sets deleted_date to current timestamp
        - Sets deleted_id to current user ID
        - Data remains in database but is excluded from queries
        - Can be restored if needed in the future
        - Checks for related records before deletion
      parameters:
      - description: Balita ID to delete
        in: body
        name: balita
        required: true
        schema:
          $ref: '#/definitions/admin.deleteBalitaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Balita deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.deleteBalitaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Balita not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Delete balita data (soft delete)
      tags:
      - admin
  /api/admin/balita/get:
    get:
      consumes:
      - application/json
      description: |-
        Get balita data based on query parameter (Admin only)

        Response data varies by parameter:
        - Without id parameter: Returns all balita with total count
        - With id parameter: Returns specific balita data

        Balita data includes: nama, tanggal_lahir, jenis_kelamin, berat_lahir, tinggi_lahir, umur, keluarga info, location info
      parameters:
      - description: Balita ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Balita data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.getAllBalitaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Balita not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get balita data
      tags:
      - admin
  /api/admin/balita/insert:
    post:
      consumes:
      - application/json
      description: |-
        Insert new balita data (Admin only)

        Inserts balita record with data including:
        - id_keluarga, nama, tanggal_lahir, jenis_kelamin
        - berat_lahir (in grams), tinggi_lahir (in cm)
        - Validates keluarga existence and balita age criteria (under 5 years)
      parameters:
      - description: Balita data
        in: body
        name: balita
        required: true
        schema:
          $ref: '#/definitions/admin.insertBalitaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Balita inserted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.insertBalitaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Insert new balita
      tags:
      - admin
  /api/admin/balita/restore:
    post:
      consumes:
      - application/json
      description: Restore soft deleted balita data by clearing deleted_date and deleted_id
        (Admin only)
      parameters:
      - description: Balita ID to restore
        in: body
        name: balita
        required: true
        schema:
          $ref: '#/definitions/admin.deleteBalitaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Balita restored successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.deleteBalitaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Balita not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Restore deleted balita data
      tags:
      - admin
  /api/admin/balita/update:
    put:
      consumes:
      - application/json
      description: |-
        Update existing balita data (Admin only)

        Updates balita record with new data including:
        - id_keluarga, nama, tanggal_lahir, jenis_kelamin
        - berat_lahir (in grams), tinggi_lahir (in cm)
        - Validates keluarga existence, balita age criteria, and prevents duplicates
      parameters:
      - description: Updated balita data
        in: body
        name: balita
        required: true
        schema:
          $ref: '#/definitions/admin.updateBalitaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Balita updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.updateBalitaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Balita not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Update balita data
      tags:
      - admin
  /api/admin/geojson-balita-points:
    get:
      consumes:
      - application/json
      description: Get balita locations as GeoJSON points with status laporan (Admin
        only)
      parameters:
      - description: Filter by status laporan
        in: query
        name: status_laporan
        type: string
      - description: Filter by kecamatan
        in: query
        name: id_kecamatan
        type: string
      - description: Filter by kelurahan
        in: query
        name: id_kelurahan
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Balita points GeoJSON retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/object.GeoJSONFeatureCollection'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get balita points GeoJSON
      tags:
      - admin
  /api/admin/geojson-kecamatan:
    get:
      consumes:
      - application/json
      description: Get kecamatan boundary areas as GeoJSON MultiPolygon (Admin only)
      parameters:
      - description: Specific Kecamatan ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Kecamatan GeoJSON retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/object.GeoJSONFeatureCollection'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get kecamatan area GeoJSON
      tags:
      - admin
  /api/admin/geojson-kelurahan:
    get:
      consumes:
      - application/json
      description: Get kelurahan boundary areas as GeoJSON MultiPolygon (Admin only)
      parameters:
      - description: Specific Kelurahan ID
        in: query
        name: id
        type: string
      - description: Filter by Kecamatan ID
        in: query
        name: id_kecamatan
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Kelurahan GeoJSON retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/object.GeoJSONFeatureCollection'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get kelurahan area GeoJSON
      tags:
      - admin
  /api/admin/intervensi-petugas/assign:
    post:
      consumes:
      - application/json
      description: |-
        Assign petugas kesehatan to specific intervensi (Admin only)

        Creates assignment between petugas and intervensi:
        - Validates both intervensi and petugas existence
        - Prevents duplicate assignments
        - Ensures petugas is active and not soft deleted
        - Ensures intervensi is active and not soft deleted
      parameters:
      - description: Assignment data
        in: body
        name: assignment
        required: true
        schema:
          $ref: '#/definitions/admin.assignIntervensiPetugasRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Petugas assigned successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.assignIntervensiPetugasResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Assign petugas to intervensi
      tags:
      - admin
  /api/admin/intervensi-petugas/get:
    get:
      consumes:
      - application/json
      description: |-
        Get intervensi petugas assignments based on query parameter (Admin only)

        Response data varies by parameter:
        - Without id parameter: Returns all assignments with total count
        - With id parameter: Returns specific assignment data
        - With id_intervensi parameter: Returns all petugas assigned to specific intervensi
        - With id_petugas_kesehatan parameter: Returns all intervensi assigned to specific petugas

        Assignment data includes: intervensi info, petugas info, SKPD info
      parameters:
      - description: Assignment ID
        in: query
        name: id
        type: string
      - description: Intervensi ID
        in: query
        name: id_intervensi
        type: string
      - description: Petugas Kesehatan ID
        in: query
        name: id_petugas_kesehatan
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Assignment data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.getAllIntervensiPetugasResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Assignment not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get intervensi petugas assignments
      tags:
      - admin
  /api/admin/intervensi-petugas/remove:
    delete:
      consumes:
      - application/json
      description: |-
        Remove petugas kesehatan assignment from intervensi (Admin only)

        Removes assignment between petugas and intervensi:
        - Validates assignment existence
        - Provides detailed information about removed assignment
      parameters:
      - description: Assignment ID to remove
        in: body
        name: assignment
        required: true
        schema:
          $ref: '#/definitions/admin.removeIntervensiPetugasRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Assignment removed successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.removeIntervensiPetugasResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Assignment not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Remove petugas assignment from intervensi
      tags:
      - admin
  /api/admin/intervensi/delete:
    delete:
      consumes:
      - application/json
      description: |-
        Soft delete intervensi data by setting deleted_date and deleted_id (Admin only)

        Performs soft delete operation:
        - Sets deleted_date to current timestamp
        - Sets deleted_id to current user ID
        - Data remains in database but is excluded from queries
        - Can be restored if needed in the future
        - Checks for related records before deletion
      parameters:
      - description: Intervensi ID to delete
        in: body
        name: intervensi
        required: true
        schema:
          $ref: '#/definitions/admin.deleteIntervensiRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Intervensi deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.deleteIntervensiResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Intervensi not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Delete intervensi data (soft delete)
      tags:
      - admin
  /api/admin/intervensi/get:
    get:
      consumes:
      - application/json
      description: |-
        Get intervensi data based on query parameter (Admin only)

        Response data varies by parameter:
        - Without id parameter: Returns all intervensi with total count
        - With id parameter: Returns specific intervensi data

        Intervensi data includes: jenis, tanggal, deskripsi, hasil, petugas count, riwayat count, creation/update info
      parameters:
      - description: Intervensi ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Intervensi data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.getAllIntervensiResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Intervensi not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get intervensi data
      tags:
      - admin
  /api/admin/intervensi/insert:
    post:
      consumes:
      - application/json
      description: |-
        Insert new intervensi data (Admin only)

        Creates a new intervensi record with:
        - id_balita: ID of the balita being intervened
        - jenis: type of intervention (gizi, kesehatan, sosial)
        - tanggal: intervention date (YYYY-MM-DD format)
        - deskripsi: detailed description of the intervention
        - hasil: results or outcomes of the intervention
        - Validates intervention type and date constraints
      parameters:
      - description: Intervensi data
        in: body
        name: intervensi
        required: true
        schema:
          $ref: '#/definitions/admin.insertIntervensiRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Intervensi inserted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.insertIntervensiResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Insert new intervensi
      tags:
      - admin
  /api/admin/intervensi/restore:
    post:
      consumes:
      - application/json
      description: Restore soft deleted intervensi data by clearing deleted_date and
        deleted_id (Admin only)
      parameters:
      - description: Intervensi ID to restore
        in: body
        name: intervensi
        required: true
        schema:
          $ref: '#/definitions/admin.deleteIntervensiRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Intervensi restored successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.deleteIntervensiResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Intervensi not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Restore deleted intervensi data
      tags:
      - admin
  /api/admin/intervensi/update:
    put:
      consumes:
      - application/json
      description: |-
        Update existing intervensi data (Admin only)

        Updates intervensi record including:
        - id_balita: ID of the balita being intervened
        - jenis: type of intervention (gizi, kesehatan, sosial)
        - tanggal: intervention date (YYYY-MM-DD format)
        - deskripsi: detailed description of the intervention
        - hasil: results or outcomes of the intervention
        - Validates intervention type and date constraints
        - Checks for related records before allowing changes
      parameters:
      - description: Updated intervensi data
        in: body
        name: intervensi
        required: true
        schema:
          $ref: '#/definitions/admin.updateIntervensiRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Intervensi updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.updateIntervensiResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Intervensi not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Update intervensi data
      tags:
      - admin
  /api/admin/keluarga/delete:
    delete:
      consumes:
      - application/json
      description: |-
        Soft delete keluarga data by setting deleted_date and deleted_id (Admin only)

        Performs soft delete operation:
        - Sets deleted_date to current timestamp
        - Sets deleted_id to current user ID
        - Data remains in database but is excluded from queries
        - Can be restored if needed in the future
      parameters:
      - description: Keluarga ID to delete
        in: body
        name: keluarga
        required: true
        schema:
          $ref: '#/definitions/admin.deleteKeluargaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.deleteKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Keluarga not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Delete keluarga data (soft delete)
      tags:
      - admin
  /api/admin/keluarga/get:
    get:
      consumes:
      - application/json
      description: |-
        Get keluarga data based on query parameter (Admin only)

        Response data varies by parameter:
        - Without id parameter: Returns all keluarga with total count
        - With id parameter: Returns specific keluarga data

        Keluarga data includes: nomor_kk, nama_ayah, nama_ibu, nik_ayah, nik_ibu, alamat, rt, rw, kelurahan, kecamatan, koordinat
      parameters:
      - description: Keluarga ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.getAllKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Keluarga not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get keluarga data
      tags:
      - admin
  /api/admin/keluarga/insert:
    post:
      consumes:
      - application/json
      description: Insert new keluarga data (Admin only)
      parameters:
      - description: Keluarga data
        in: body
        name: keluarga
        required: true
        schema:
          $ref: '#/definitions/admin.insertKeluargaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga inserted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.insertKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Insert new keluarga
      tags:
      - admin
  /api/admin/keluarga/restore:
    post:
      consumes:
      - application/json
      description: Restore soft deleted keluarga data by clearing deleted_date and
        deleted_id (Admin only)
      parameters:
      - description: Keluarga ID to restore
        in: body
        name: keluarga
        required: true
        schema:
          $ref: '#/definitions/admin.deleteKeluargaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga restored successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.deleteKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Keluarga not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Restore deleted keluarga data
      tags:
      - admin
  /api/admin/keluarga/update:
    put:
      consumes:
      - application/json
      description: |-
        Update existing keluarga data (Admin only)

        Updates keluarga record with new data including:
        - nomor_kk, nama_ayah, nama_ibu, nik_ayah, nik_ibu
        - alamat, rt, rw, id_kelurahan, koordinat
        - Validates uniqueness of nomor_kk and NIK (excluding current record)
      parameters:
      - description: Updated keluarga data
        in: body
        name: keluarga
        required: true
        schema:
          $ref: '#/definitions/admin.updateKeluargaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.updateKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Keluarga not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Update keluarga data
      tags:
      - admin
  /api/admin/laporan-masyarakat/delete:
    delete:
      consumes:
      - application/json
      description: |-
        Soft delete laporan masyarakat data by setting deleted_date and deleted_id (Admin only)

        Performs soft delete operation:
        - Sets deleted_date to current timestamp
        - Sets deleted_id to current user ID
        - Data remains in database but is excluded from queries
        - Can be restored if needed in the future
        - Checks for related records before deletion
      parameters:
      - description: Laporan Masyarakat ID to delete
        in: body
        name: laporan
        required: true
        schema:
          $ref: '#/definitions/admin.deleteLaporanMasyarakatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Laporan masyarakat deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.deleteLaporanMasyarakatResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Laporan masyarakat not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Delete laporan masyarakat data (soft delete)
      tags:
      - admin
  /api/admin/laporan-masyarakat/get:
    get:
      consumes:
      - application/json
      description: |-
        Get laporan masyarakat data based on query parameter (Admin only)

        Response data varies by parameter:
        - Without id parameter: Returns all laporan masyarakat with total count
        - With id parameter: Returns specific laporan masyarakat data

        Laporan masyarakat data includes: pelapor info, balita info, keluarga info, status laporan, contact details
      parameters:
      - description: Laporan Masyarakat ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Laporan masyarakat data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.getAllLaporanMasyarakatResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Laporan masyarakat not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get laporan masyarakat data
      tags:
      - admin
  /api/admin/laporan-masyarakat/insert:
    post:
      consumes:
      - application/json
      description: |-
        Insert new laporan masyarakat data (Admin only)

        Inserts laporan masyarakat record with data including:
        - id_masyarakat (optional, null if admin report), id_balita, id_status_laporan
        - tanggal_laporan, hubungan_dengan_balita, nomor_hp_pelapor, nomor_hp_keluarga_balita
        - Validates balita existence, status laporan, and masyarakat (if provided)
      parameters:
      - description: Laporan masyarakat data
        in: body
        name: laporan
        required: true
        schema:
          $ref: '#/definitions/admin.insertLaporanMasyarakatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Laporan masyarakat inserted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.insertLaporanMasyarakatResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Insert new laporan masyarakat
      tags:
      - admin
  /api/admin/laporan-masyarakat/restore:
    post:
      consumes:
      - application/json
      description: Restore soft deleted laporan masyarakat data by clearing deleted_date
        and deleted_id (Admin only)
      parameters:
      - description: Laporan Masyarakat ID to restore
        in: body
        name: laporan
        required: true
        schema:
          $ref: '#/definitions/admin.deleteLaporanMasyarakatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Laporan masyarakat restored successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.deleteLaporanMasyarakatResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Laporan masyarakat not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Restore deleted laporan masyarakat data
      tags:
      - admin
  /api/admin/laporan-masyarakat/update:
    put:
      consumes:
      - application/json
      description: |-
        Update existing laporan masyarakat data (Admin only)

        Updates laporan masyarakat record with new data including:
        - id_masyarakat (optional, null if admin report), id_balita, id_status_laporan
        - tanggal_laporan, hubungan_dengan_balita, nomor_hp_pelapor, nomor_hp_keluarga_balita
        - Validates balita existence, status laporan, masyarakat (if provided), and prevents duplicates
      parameters:
      - description: Updated laporan masyarakat data
        in: body
        name: laporan
        required: true
        schema:
          $ref: '#/definitions/admin.updateLaporanMasyarakatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Laporan masyarakat updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.updateLaporanMasyarakatResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Laporan masyarakat not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Update laporan masyarakat data
      tags:
      - admin
  /api/admin/master-kecamatan:
    get:
      consumes:
      - application/json
      description: Get all kecamatan for dropdown/reference (Admin only)
      produces:
      - application/json
      responses:
        "200":
          description: Kecamatan data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.getAllKecamatanResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get kecamatan master data
      tags:
      - admin
  /api/admin/master-kelurahan:
    get:
      consumes:
      - application/json
      description: Get kelurahan data with optional kecamatan filter (Admin only)
      parameters:
      - description: Filter by Kecamatan ID
        in: query
        name: id_kecamatan
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Kelurahan data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.getAllKelurahanResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get kelurahan master data
      tags:
      - admin
  /api/admin/master-masyarakat:
    get:
      consumes:
      - application/json
      description: Get all masyarakat for dropdown/reference (Admin only)
      produces:
      - application/json
      responses:
        "200":
          description: Masyarakat data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.getAllMasyarakatResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get masyarakat master data
      tags:
      - admin
  /api/admin/master-skpd:
    get:
      consumes:
      - application/json
      description: Get SKPD data with optional jenis filter (Admin only)
      parameters:
      - description: Filter by SKPD jenis (puskesmas, kelurahan, skpd)
        in: query
        name: jenis
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: SKPD data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.getAllSkpdMasterResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get SKPD master data
      tags:
      - admin
  /api/admin/master-status-laporan:
    get:
      consumes:
      - application/json
      description: Get all status laporan for dropdown/reference (Admin only)
      produces:
      - application/json
      responses:
        "200":
          description: Status laporan data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.getAllStatusLaporanResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get status laporan master data
      tags:
      - admin
  /api/admin/petugas-kesehatan/delete:
    delete:
      consumes:
      - application/json
      description: |-
        Soft delete petugas kesehatan data by setting deleted_date and deleted_id (Admin only)

        Performs soft delete operation:
        - Sets deleted_date to current timestamp
        - Sets deleted_id to current user ID
        - Data remains in database but is excluded from queries
        - Can be restored if needed in the future
        - Checks for related records before deletion
      parameters:
      - description: Petugas Kesehatan ID to delete
        in: body
        name: petugas
        required: true
        schema:
          $ref: '#/definitions/admin.deletePetugasKesehatanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Petugas kesehatan deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.deletePetugasKesehatanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Petugas kesehatan not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Delete petugas kesehatan data (soft delete)
      tags:
      - admin
  /api/admin/petugas-kesehatan/get:
    get:
      consumes:
      - application/json
      description: |-
        Get petugas kesehatan data based on query parameter (Admin only)

        Response data varies by parameter:
        - Without id parameter: Returns all petugas kesehatan with total count
        - With id parameter: Returns specific petugas kesehatan data

        Petugas kesehatan data includes: nama, email, SKPD info, intervensi count, creation/update dates
      parameters:
      - description: Petugas Kesehatan ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Petugas kesehatan data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.getAllPetugasKesehatanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Petugas kesehatan not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get petugas kesehatan data
      tags:
      - admin
  /api/admin/petugas-kesehatan/insert:
    post:
      consumes:
      - application/json
      description: |-
        Insert new petugas kesehatan data (Admin only)

        Creates a complete petugas kesehatan record including:
        - Creates pengguna account with email and hashed password
        - Creates petugas_kesehatan record linked to SKPD
        - Sets role as "petugas kesehatan" in pengguna table
        - Validates email uniqueness and SKPD existence
      parameters:
      - description: Petugas kesehatan data
        in: body
        name: petugas
        required: true
        schema:
          $ref: '#/definitions/admin.insertPetugasKesehatanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Petugas kesehatan inserted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.insertPetugasKesehatanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Insert new petugas kesehatan
      tags:
      - admin
  /api/admin/petugas-kesehatan/restore:
    post:
      consumes:
      - application/json
      description: Restore soft deleted petugas kesehatan data by clearing deleted_date
        and deleted_id (Admin only)
      parameters:
      - description: Petugas Kesehatan ID to restore
        in: body
        name: petugas
        required: true
        schema:
          $ref: '#/definitions/admin.deletePetugasKesehatanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Petugas kesehatan restored successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.deletePetugasKesehatanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Petugas kesehatan not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Restore deleted petugas kesehatan data
      tags:
      - admin
  /api/admin/petugas-kesehatan/update:
    put:
      consumes:
      - application/json
      description: |-
        Update existing petugas kesehatan data (Admin only)

        Updates petugas kesehatan record including:
        - Updates pengguna account (email and password)
        - Updates petugas_kesehatan record (nama and SKPD)
        - Validates email uniqueness (excluding current record)
        - Validates SKPD existence and name uniqueness within SKPD
        - Checks for related intervensi before allowing SKPD change
        - Password is required and will be updated if different from current
      parameters:
      - description: Updated petugas kesehatan data
        in: body
        name: petugas
        required: true
        schema:
          $ref: '#/definitions/admin.updatePetugasKesehatanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Petugas kesehatan updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.updatePetugasKesehatanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Petugas kesehatan not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Update petugas kesehatan data
      tags:
      - admin
  /api/admin/riwayat-pemeriksaan/delete:
    delete:
      consumes:
      - application/json
      description: |-
        Soft delete riwayat pemeriksaan data by setting deleted_date and deleted_id (Admin only)

        Performs soft delete operation:
        - Sets deleted_date to current timestamp
        - Sets deleted_id to current user ID
        - Data remains in database but is excluded from queries
        - Can be restored if needed in the future
        - Provides detailed information about the deleted medical record
      parameters:
      - description: Riwayat Pemeriksaan ID to delete
        in: body
        name: riwayat
        required: true
        schema:
          $ref: '#/definitions/admin.deleteRiwayatPemeriksaanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Riwayat pemeriksaan deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.deleteRiwayatPemeriksaanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Riwayat pemeriksaan not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Delete riwayat pemeriksaan data (soft delete)
      tags:
      - admin
  /api/admin/riwayat-pemeriksaan/get:
    get:
      consumes:
      - application/json
      description: |-
        Get riwayat pemeriksaan data based on query parameter (Admin only)

        Response data varies by parameter:
        - Without any parameter: Returns all riwayat pemeriksaan with total count
        - With id parameter: Returns specific riwayat pemeriksaan data
        - With id_balita parameter: Returns all riwayat pemeriksaan for specific balita
        - With id_laporan_masyarakat parameter: Returns all riwayat pemeriksaan for specific laporan
        - With id_intervensi parameter: Returns all riwayat pemeriksaan for specific intervensi

        Riwayat pemeriksaan data includes: balita info, intervensi info, laporan info, examination details, location info
      parameters:
      - description: Riwayat Pemeriksaan ID
        in: query
        name: id
        type: string
      - description: Balita ID
        in: query
        name: id_balita
        type: string
      - description: Laporan Masyarakat ID
        in: query
        name: id_laporan_masyarakat
        type: string
      - description: Intervensi ID
        in: query
        name: id_intervensi
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Riwayat pemeriksaan data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.getAllRiwayatPemeriksaanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Riwayat pemeriksaan not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get riwayat pemeriksaan data
      tags:
      - admin
  /api/admin/riwayat-pemeriksaan/insert:
    post:
      consumes:
      - application/json
      description: |-
        Insert new riwayat pemeriksaan data (Admin only)

        Creates a new riwayat pemeriksaan record with:
        - id_balita: balita being examined
        - id_intervensi: related intervention program
        - id_laporan_masyarakat: related masyarakat report
        - tanggal: examination date (YYYY-MM-DD format)
        - berat_badan: weight in kg (decimal)
        - tinggi_badan: height in cm (decimal)
        - status_gizi: nutritional status (normal, stunting, gizi buruk)
        - keterangan: examination notes and recommendations
      parameters:
      - description: Riwayat pemeriksaan data
        in: body
        name: riwayat
        required: true
        schema:
          $ref: '#/definitions/admin.insertRiwayatPemeriksaanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Riwayat pemeriksaan inserted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.insertRiwayatPemeriksaanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Insert new riwayat pemeriksaan
      tags:
      - admin
  /api/admin/riwayat-pemeriksaan/restore:
    post:
      consumes:
      - application/json
      description: Restore soft deleted riwayat pemeriksaan data by clearing deleted_date
        and deleted_id (Admin only)
      parameters:
      - description: Riwayat Pemeriksaan ID to restore
        in: body
        name: riwayat
        required: true
        schema:
          $ref: '#/definitions/admin.deleteRiwayatPemeriksaanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Riwayat pemeriksaan restored successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.deleteRiwayatPemeriksaanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Riwayat pemeriksaan not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Restore deleted riwayat pemeriksaan data
      tags:
      - admin
  /api/admin/riwayat-pemeriksaan/update:
    put:
      consumes:
      - application/json
      description: |-
        Update existing riwayat pemeriksaan data (Admin only)

        Updates riwayat pemeriksaan record with new data including:
        - id_balita: balita being examined
        - id_intervensi: related intervention program
        - id_laporan_masyarakat: related masyarakat report
        - tanggal: examination date (YYYY-MM-DD format)
        - berat_badan: weight in kg (decimal)
        - tinggi_badan: height in cm (decimal)
        - status_gizi: nutritional status (normal, stunting, gizi buruk)
        - keterangan: examination notes and recommendations
        - Validates existence of balita and intervensi, prevents duplicates
      parameters:
      - description: Updated riwayat pemeriksaan data
        in: body
        name: riwayat
        required: true
        schema:
          $ref: '#/definitions/admin.updateRiwayatPemeriksaanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Riwayat pemeriksaan updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.updateRiwayatPemeriksaanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Riwayat pemeriksaan not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Update riwayat pemeriksaan data
      tags:
      - admin
  /api/admin/skpd/delete:
    delete:
      consumes:
      - application/json
      description: |-
        Soft delete SKPD data by setting deleted_date and deleted_id (Admin only)

        Performs soft delete operation:
        - Sets deleted_date to current timestamp
        - Sets deleted_id to current user ID
        - Data remains in database but is excluded from queries
        - Can be restored if needed in the future
        - Checks for related records before deletion
      parameters:
      - description: SKPD ID to delete
        in: body
        name: skpd
        required: true
        schema:
          $ref: '#/definitions/admin.deleteSkpdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: SKPD deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.deleteSkpdResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: SKPD not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Delete SKPD data (soft delete)
      tags:
      - admin
  /api/admin/skpd/get:
    get:
      consumes:
      - application/json
      description: |-
        Get SKPD data based on query parameter (Admin only)

        Response data varies by parameter:
        - Without id parameter: Returns all SKPD with total count
        - With id parameter: Returns specific SKPD data

        SKPD data includes: skpd name, jenis (type), petugas count, creation/update dates
      parameters:
      - description: SKPD ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: SKPD data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.getAllSkpdResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: SKPD not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get SKPD data
      tags:
      - admin
  /api/admin/skpd/insert:
    post:
      consumes:
      - application/json
      description: |-
        Insert new SKPD data (Admin only)

        Inserts SKPD record with data including:
        - skpd (nama SKPD), jenis (puskesmas/kelurahan/skpd)
        - Validates uniqueness of SKPD name within the same jenis
        - Supports different types of SKPD organizations
      parameters:
      - description: SKPD data
        in: body
        name: skpd
        required: true
        schema:
          $ref: '#/definitions/admin.insertSkpdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: SKPD inserted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.insertSkpdResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Insert new SKPD
      tags:
      - admin
  /api/admin/skpd/restore:
    post:
      consumes:
      - application/json
      description: Restore soft deleted SKPD data by clearing deleted_date and deleted_id
        (Admin only)
      parameters:
      - description: SKPD ID to restore
        in: body
        name: skpd
        required: true
        schema:
          $ref: '#/definitions/admin.deleteSkpdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: SKPD restored successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.deleteSkpdResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: SKPD not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Restore deleted SKPD data
      tags:
      - admin
  /api/admin/skpd/update:
    put:
      consumes:
      - application/json
      description: |-
        Update existing SKPD data (Admin only)

        Updates SKPD record with new data including:
        - skpd (nama SKPD), jenis (puskesmas/kelurahan/skpd)
        - Validates uniqueness of SKPD name within the same jenis (excluding current record)
        - Checks for related petugas kesehatan before allowing jenis change
      parameters:
      - description: Updated SKPD data
        in: body
        name: skpd
        required: true
        schema:
          $ref: '#/definitions/admin.updateSkpdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: SKPD updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/admin.updateSkpdResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: SKPD not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Update SKPD data
      tags:
      - admin
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login with email and password
      parameters:
      - description: Login request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth.loginResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: User login
      tags:
      - auth
  /api/auth/profile:
    get:
      consumes:
      - application/json
      description: |-
        Get user profile data based on JWT token and role

        Response data varies by role:
        - masyarakat: {id, nama, alamat}
        - petugas kesehatan: {id, id_skpd, nama, created_date}
        - admin: {nama: "Administrator"}
      produces:
      - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/auth.userProfileResponse'
                  - properties:
                      data:
                        type: object
                    type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get user profile
      tags:
      - auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email, nama, password, and alamat
      parameters:
      - description: Register request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/auth.registerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: User registration
      tags:
      - auth
swagger: "2.0"
