definitions:
  api.balitaResponse:
    properties:
      berat_lahir:
        type: string
      created_date:
        type: string
      id:
        type: string
      id_keluarga:
        type: string
      jenis_kelamin:
        type: string
      kecamatan:
        type: string
      kelurahan:
        type: string
      nama:
        type: string
      nama_ayah:
        type: string
      nama_ibu:
        type: string
      nomor_kk:
        type: string
      tanggal_lahir:
        type: string
      tinggi_lahir:
        type: string
      umur:
        description: calculated field in months
        type: string
      updated_date:
        type: string
    type: object
  api.deleteBalitaRequest:
    properties:
      id:
        type: string
    type: object
  api.deleteBalitaResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  api.deleteKeluargaRequest:
    properties:
      id:
        type: string
    type: object
  api.deleteKeluargaResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  api.deleteLaporanMasyarakatRequest:
    properties:
      id:
        type: string
    type: object
  api.deleteLaporanMasyarakatResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  api.deletePetugasKesehatanRequest:
    properties:
      id:
        type: string
    type: object
  api.deletePetugasKesehatanResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  api.deleteSkpdRequest:
    properties:
      id:
        type: string
    type: object
  api.deleteSkpdResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  api.getAllBalitaResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.balitaResponse'
        type: array
      total:
        type: integer
    type: object
  api.getAllKeluargaResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.keluargaResponse'
        type: array
      total:
        type: integer
    type: object
  api.getAllLaporanMasyarakatResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.laporanMasyarakatResponse'
        type: array
      total:
        type: integer
    type: object
  api.getAllPetugasKesehatanResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.petugasKesehatanResponse'
        type: array
      total:
        type: integer
    type: object
  api.getAllSkpdResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/api.skpdResponse'
        type: array
      total:
        type: integer
    type: object
  api.insertBalitaRequest:
    properties:
      berat_lahir:
        description: in grams
        type: string
      id_keluarga:
        type: string
      jenis_kelamin:
        description: '"L" or "P"'
        type: string
      nama:
        type: string
      tanggal_lahir:
        description: 'Format: YYYY-MM-DD'
        type: string
      tinggi_lahir:
        description: in cm
        type: string
    type: object
  api.insertBalitaResponse:
    properties:
      id:
        type: string
    type: object
  api.insertKeluargaRequest:
    properties:
      alamat:
        type: string
      id_kelurahan:
        type: string
      koordinat:
        description: '[longitude, latitude]'
        items:
          type: number
        type: array
      nama_ayah:
        type: string
      nama_ibu:
        type: string
      nik_ayah:
        type: string
      nik_ibu:
        type: string
      nomor_kk:
        type: string
      rt:
        type: string
      rw:
        type: string
    type: object
  api.insertKeluargaResponse:
    properties:
      id:
        type: string
    type: object
  api.insertLaporanMasyarakatRequest:
    properties:
      hubungan_dengan_balita:
        type: string
      id_balita:
        type: string
      id_masyarakat:
        description: dapat null jika laporan dari admin
        type: string
      id_status_laporan:
        type: string
      nomor_hp_keluarga_balita:
        type: string
      nomor_hp_pelapor:
        type: string
      tanggal_laporan:
        description: 'Format: YYYY-MM-DD'
        type: string
    type: object
  api.insertLaporanMasyarakatResponse:
    properties:
      id:
        type: string
    type: object
  api.insertPetugasKesehatanRequest:
    properties:
      email:
        type: string
      id_skpd:
        type: string
      nama:
        type: string
      password:
        type: string
    type: object
  api.insertPetugasKesehatanResponse:
    properties:
      id:
        type: string
    type: object
  api.insertSkpdRequest:
    properties:
      jenis:
        description: '"puskesmas", "kelurahan", "skpd"'
        type: string
      skpd:
        type: string
    type: object
  api.insertSkpdResponse:
    properties:
      id:
        type: string
    type: object
  api.keluargaResponse:
    properties:
      alamat:
        type: string
      created_date:
        type: string
      id:
        type: string
      id_kelurahan:
        type: string
      kecamatan:
        type: string
      kelurahan:
        type: string
      koordinat:
        items:
          type: number
        type: array
      nama_ayah:
        type: string
      nama_ibu:
        type: string
      nik_ayah:
        type: string
      nik_ibu:
        type: string
      nomor_kk:
        type: string
      rt:
        type: string
      rw:
        type: string
      updated_date:
        type: string
    type: object
  api.laporanMasyarakatResponse:
    properties:
      alamat:
        type: string
      created_date:
        type: string
      email_pelapor:
        type: string
      hubungan_dengan_balita:
        type: string
      id:
        type: string
      id_balita:
        type: string
      id_masyarakat:
        type: string
      id_status_laporan:
        type: string
      jenis_laporan:
        description: '"masyarakat" atau "admin"'
        type: string
      kecamatan:
        type: string
      kelurahan:
        type: string
      nama_ayah:
        type: string
      nama_balita:
        type: string
      nama_ibu:
        type: string
      nama_pelapor:
        type: string
      nomor_hp_keluarga_balita:
        type: string
      nomor_hp_pelapor:
        type: string
      nomor_kk:
        type: string
      status_laporan:
        type: string
      tanggal_laporan:
        type: string
      updated_date:
        type: string
    type: object
  api.petugasKesehatanResponse:
    properties:
      created_date:
        type: string
      email:
        type: string
      id:
        type: string
      id_pengguna:
        type: string
      id_skpd:
        type: string
      intervensi_count:
        description: jumlah intervensi terkait
        type: integer
      jenis_skpd:
        type: string
      nama:
        type: string
      skpd:
        type: string
      updated_date:
        type: string
    type: object
  api.skpdResponse:
    properties:
      created_date:
        type: string
      id:
        type: string
      jenis:
        type: string
      petugas_count:
        description: jumlah petugas kesehatan terkait
        type: integer
      skpd:
        type: string
      updated_date:
        type: string
    type: object
  api.updateBalitaRequest:
    properties:
      berat_lahir:
        description: in grams
        type: string
      id:
        type: string
      id_keluarga:
        type: string
      jenis_kelamin:
        description: '"L" or "P"'
        type: string
      nama:
        type: string
      tanggal_lahir:
        description: 'Format: YYYY-MM-DD'
        type: string
      tinggi_lahir:
        description: in cm
        type: string
    type: object
  api.updateBalitaResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  api.updateKeluargaRequest:
    properties:
      alamat:
        type: string
      id:
        type: string
      id_kelurahan:
        type: string
      koordinat:
        description: '[longitude, latitude]'
        items:
          type: number
        type: array
      nama_ayah:
        type: string
      nama_ibu:
        type: string
      nik_ayah:
        type: string
      nik_ibu:
        type: string
      nomor_kk:
        type: string
      rt:
        type: string
      rw:
        type: string
    type: object
  api.updateKeluargaResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  api.updateLaporanMasyarakatRequest:
    properties:
      hubungan_dengan_balita:
        type: string
      id:
        type: string
      id_balita:
        type: string
      id_masyarakat:
        description: dapat null jika laporan dari admin
        type: string
      id_status_laporan:
        type: string
      nomor_hp_keluarga_balita:
        type: string
      nomor_hp_pelapor:
        type: string
      tanggal_laporan:
        description: 'Format: YYYY-MM-DD'
        type: string
    type: object
  api.updateLaporanMasyarakatResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  api.updatePetugasKesehatanRequest:
    properties:
      email:
        type: string
      id:
        type: string
      id_skpd:
        type: string
      nama:
        type: string
      password:
        description: Optional - only update if provided
        type: string
    type: object
  api.updatePetugasKesehatanResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  api.updateSkpdRequest:
    properties:
      id:
        type: string
      jenis:
        description: '"puskesmas", "kelurahan", "skpd"'
        type: string
      skpd:
        type: string
    type: object
  api.updateSkpdResponse:
    properties:
      id:
        type: string
      message:
        type: string
    type: object
  auth.loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth.loginResponse:
    properties:
      token:
        type: string
    type: object
  auth.registerRequest:
    properties:
      alamat:
        type: string
      email:
        type: string
      nama:
        type: string
      password:
        type: string
    type: object
  auth.userProfileResponse:
    properties:
      data: {}
      email:
        type: string
      id:
        type: string
      role:
        type: string
    type: object
  object.Response:
    properties:
      data: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    name: API Support
    url: http://www.swagger.io/support
  description: API for managing stunting data
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Stunting Web API
  version: 0.0.2
paths:
  /api/admin/balita/delete:
    delete:
      consumes:
      - application/json
      description: |-
        Soft delete balita data by setting deleted_date and deleted_id (Admin only)

        Performs soft delete operation:
        - Sets deleted_date to current timestamp
        - Sets deleted_id to current user ID
        - Data remains in database but is excluded from queries
        - Can be restored if needed in the future
        - Checks for related records before deletion
      parameters:
      - description: Balita ID to delete
        in: body
        name: balita
        required: true
        schema:
          $ref: '#/definitions/api.deleteBalitaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Balita deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.deleteBalitaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Balita not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Delete balita data (soft delete)
      tags:
      - admin
  /api/admin/balita/get:
    get:
      consumes:
      - application/json
      description: |-
        Get balita data based on query parameter (Admin only)

        Response data varies by parameter:
        - Without id parameter: Returns all balita with total count
        - With id parameter: Returns specific balita data

        Balita data includes: nama, tanggal_lahir, jenis_kelamin, berat_lahir, tinggi_lahir, umur, keluarga info, location info
      parameters:
      - description: Balita ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Balita data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.getAllBalitaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Balita not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get balita data
      tags:
      - admin
  /api/admin/balita/insert:
    post:
      consumes:
      - application/json
      description: |-
        Insert new balita data (Admin only)

        Inserts balita record with data including:
        - id_keluarga, nama, tanggal_lahir, jenis_kelamin
        - berat_lahir (in grams), tinggi_lahir (in cm)
        - Validates keluarga existence and balita age criteria (under 5 years)
      parameters:
      - description: Balita data
        in: body
        name: balita
        required: true
        schema:
          $ref: '#/definitions/api.insertBalitaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Balita inserted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.insertBalitaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Insert new balita
      tags:
      - admin
  /api/admin/balita/restore:
    post:
      consumes:
      - application/json
      description: Restore soft deleted balita data by clearing deleted_date and deleted_id
        (Admin only)
      parameters:
      - description: Balita ID to restore
        in: body
        name: balita
        required: true
        schema:
          $ref: '#/definitions/api.deleteBalitaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Balita restored successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.deleteBalitaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Balita not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Restore deleted balita data
      tags:
      - admin
  /api/admin/balita/update:
    put:
      consumes:
      - application/json
      description: |-
        Update existing balita data (Admin only)

        Updates balita record with new data including:
        - id_keluarga, nama, tanggal_lahir, jenis_kelamin
        - berat_lahir (in grams), tinggi_lahir (in cm)
        - Validates keluarga existence, balita age criteria, and prevents duplicates
      parameters:
      - description: Updated balita data
        in: body
        name: balita
        required: true
        schema:
          $ref: '#/definitions/api.updateBalitaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Balita updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.updateBalitaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Balita not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Update balita data
      tags:
      - admin
  /api/admin/keluarga/delete:
    delete:
      consumes:
      - application/json
      description: |-
        Soft delete keluarga data by setting deleted_date and deleted_id (Admin only)

        Performs soft delete operation:
        - Sets deleted_date to current timestamp
        - Sets deleted_id to current user ID
        - Data remains in database but is excluded from queries
        - Can be restored if needed in the future
      parameters:
      - description: Keluarga ID to delete
        in: body
        name: keluarga
        required: true
        schema:
          $ref: '#/definitions/api.deleteKeluargaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.deleteKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Keluarga not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Delete keluarga data (soft delete)
      tags:
      - admin
  /api/admin/keluarga/get:
    get:
      consumes:
      - application/json
      description: |-
        Get keluarga data based on query parameter (Admin only)

        Response data varies by parameter:
        - Without id parameter: Returns all keluarga with total count
        - With id parameter: Returns specific keluarga data

        Keluarga data includes: nomor_kk, nama_ayah, nama_ibu, nik_ayah, nik_ibu, alamat, rt, rw, kelurahan, kecamatan, koordinat
      parameters:
      - description: Keluarga ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.getAllKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Keluarga not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get keluarga data
      tags:
      - admin
  /api/admin/keluarga/insert:
    post:
      consumes:
      - application/json
      description: Insert new keluarga data (Admin only)
      parameters:
      - description: Keluarga data
        in: body
        name: keluarga
        required: true
        schema:
          $ref: '#/definitions/api.insertKeluargaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga inserted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.insertKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Insert new keluarga
      tags:
      - admin
  /api/admin/keluarga/restore:
    post:
      consumes:
      - application/json
      description: Restore soft deleted keluarga data by clearing deleted_date and
        deleted_id (Admin only)
      parameters:
      - description: Keluarga ID to restore
        in: body
        name: keluarga
        required: true
        schema:
          $ref: '#/definitions/api.deleteKeluargaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga restored successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.deleteKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Keluarga not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Restore deleted keluarga data
      tags:
      - admin
  /api/admin/keluarga/update:
    put:
      consumes:
      - application/json
      description: |-
        Update existing keluarga data (Admin only)

        Updates keluarga record with new data including:
        - nomor_kk, nama_ayah, nama_ibu, nik_ayah, nik_ibu
        - alamat, rt, rw, id_kelurahan, koordinat
        - Validates uniqueness of nomor_kk and NIK (excluding current record)
      parameters:
      - description: Updated keluarga data
        in: body
        name: keluarga
        required: true
        schema:
          $ref: '#/definitions/api.updateKeluargaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Keluarga updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.updateKeluargaResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Keluarga not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Update keluarga data
      tags:
      - admin
  /api/admin/laporan-masyarakat/delete:
    delete:
      consumes:
      - application/json
      description: |-
        Soft delete laporan masyarakat data by setting deleted_date and deleted_id (Admin only)

        Performs soft delete operation:
        - Sets deleted_date to current timestamp
        - Sets deleted_id to current user ID
        - Data remains in database but is excluded from queries
        - Can be restored if needed in the future
        - Checks for related records before deletion
      parameters:
      - description: Laporan Masyarakat ID to delete
        in: body
        name: laporan
        required: true
        schema:
          $ref: '#/definitions/api.deleteLaporanMasyarakatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Laporan masyarakat deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.deleteLaporanMasyarakatResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Laporan masyarakat not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Delete laporan masyarakat data (soft delete)
      tags:
      - admin
  /api/admin/laporan-masyarakat/get:
    get:
      consumes:
      - application/json
      description: |-
        Get laporan masyarakat data based on query parameter (Admin only)

        Response data varies by parameter:
        - Without id parameter: Returns all laporan masyarakat with total count
        - With id parameter: Returns specific laporan masyarakat data

        Laporan masyarakat data includes: pelapor info, balita info, keluarga info, status laporan, contact details
      parameters:
      - description: Laporan Masyarakat ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Laporan masyarakat data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.getAllLaporanMasyarakatResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Laporan masyarakat not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get laporan masyarakat data
      tags:
      - admin
  /api/admin/laporan-masyarakat/insert:
    post:
      consumes:
      - application/json
      description: |-
        Insert new laporan masyarakat data (Admin only)

        Inserts laporan masyarakat record with data including:
        - id_masyarakat (optional, null if admin report), id_balita, id_status_laporan
        - tanggal_laporan, hubungan_dengan_balita, nomor_hp_pelapor, nomor_hp_keluarga_balita
        - Validates balita existence, status laporan, and masyarakat (if provided)
      parameters:
      - description: Laporan masyarakat data
        in: body
        name: laporan
        required: true
        schema:
          $ref: '#/definitions/api.insertLaporanMasyarakatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Laporan masyarakat inserted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.insertLaporanMasyarakatResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Insert new laporan masyarakat
      tags:
      - admin
  /api/admin/laporan-masyarakat/restore:
    post:
      consumes:
      - application/json
      description: Restore soft deleted laporan masyarakat data by clearing deleted_date
        and deleted_id (Admin only)
      parameters:
      - description: Laporan Masyarakat ID to restore
        in: body
        name: laporan
        required: true
        schema:
          $ref: '#/definitions/api.deleteLaporanMasyarakatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Laporan masyarakat restored successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.deleteLaporanMasyarakatResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Laporan masyarakat not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Restore deleted laporan masyarakat data
      tags:
      - admin
  /api/admin/laporan-masyarakat/update:
    put:
      consumes:
      - application/json
      description: |-
        Update existing laporan masyarakat data (Admin only)

        Updates laporan masyarakat record with new data including:
        - id_masyarakat (optional, null if admin report), id_balita, id_status_laporan
        - tanggal_laporan, hubungan_dengan_balita, nomor_hp_pelapor, nomor_hp_keluarga_balita
        - Validates balita existence, status laporan, masyarakat (if provided), and prevents duplicates
      parameters:
      - description: Updated laporan masyarakat data
        in: body
        name: laporan
        required: true
        schema:
          $ref: '#/definitions/api.updateLaporanMasyarakatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Laporan masyarakat updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.updateLaporanMasyarakatResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Laporan masyarakat not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Update laporan masyarakat data
      tags:
      - admin
  /api/admin/petugas-kesehatan:
    get:
      consumes:
      - application/json
      description: |-
        Get petugas kesehatan data based on query parameter (Admin only)

        Response data varies by parameter:
        - Without id parameter: Returns all petugas kesehatan with total count
        - With id parameter: Returns specific petugas kesehatan data

        Petugas kesehatan data includes: nama, email, SKPD info, intervensi count, creation/update dates
      parameters:
      - description: Petugas Kesehatan ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Petugas kesehatan data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.getAllPetugasKesehatanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Petugas kesehatan not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get petugas kesehatan data
      tags:
      - admin
  /api/admin/petugas-kesehatan/delete:
    delete:
      consumes:
      - application/json
      description: |-
        Soft delete petugas kesehatan data by setting deleted_date and deleted_id (Admin only)

        Performs soft delete operation:
        - Sets deleted_date to current timestamp
        - Sets deleted_id to current user ID
        - Data remains in database but is excluded from queries
        - Can be restored if needed in the future
        - Checks for related records before deletion
      parameters:
      - description: Petugas Kesehatan ID to delete
        in: body
        name: petugas
        required: true
        schema:
          $ref: '#/definitions/api.deletePetugasKesehatanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Petugas kesehatan deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.deletePetugasKesehatanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Petugas kesehatan not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Delete petugas kesehatan data (soft delete)
      tags:
      - admin
  /api/admin/petugas-kesehatan/insert:
    post:
      consumes:
      - application/json
      description: |-
        Insert new petugas kesehatan data (Admin only)

        Creates a complete petugas kesehatan record including:
        - Creates pengguna account with email and hashed password
        - Creates petugas_kesehatan record linked to SKPD
        - Sets role as "petugas kesehatan" in pengguna table
        - Validates email uniqueness and SKPD existence
      parameters:
      - description: Petugas kesehatan data
        in: body
        name: petugas
        required: true
        schema:
          $ref: '#/definitions/api.insertPetugasKesehatanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Petugas kesehatan inserted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.insertPetugasKesehatanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Insert new petugas kesehatan
      tags:
      - admin
  /api/admin/petugas-kesehatan/restore:
    post:
      consumes:
      - application/json
      description: Restore soft deleted petugas kesehatan data by clearing deleted_date
        and deleted_id (Admin only)
      parameters:
      - description: Petugas Kesehatan ID to restore
        in: body
        name: petugas
        required: true
        schema:
          $ref: '#/definitions/api.deletePetugasKesehatanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Petugas kesehatan restored successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.deletePetugasKesehatanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Petugas kesehatan not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Restore deleted petugas kesehatan data
      tags:
      - admin
  /api/admin/petugas-kesehatan/update:
    put:
      consumes:
      - application/json
      description: |-
        Update existing petugas kesehatan data (Admin only)

        Updates petugas kesehatan record including:
        - Updates pengguna account (email and optionally password)
        - Updates petugas_kesehatan record (nama and SKPD)
        - Validates email uniqueness (excluding current record)
        - Validates SKPD existence and name uniqueness within SKPD
        - Checks for related intervensi before allowing SKPD change
      parameters:
      - description: Updated petugas kesehatan data
        in: body
        name: petugas
        required: true
        schema:
          $ref: '#/definitions/api.updatePetugasKesehatanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Petugas kesehatan updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.updatePetugasKesehatanResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Petugas kesehatan not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Update petugas kesehatan data
      tags:
      - admin
  /api/admin/skpd/delete:
    delete:
      consumes:
      - application/json
      description: |-
        Soft delete SKPD data by setting deleted_date and deleted_id (Admin only)

        Performs soft delete operation:
        - Sets deleted_date to current timestamp
        - Sets deleted_id to current user ID
        - Data remains in database but is excluded from queries
        - Can be restored if needed in the future
        - Checks for related records before deletion
      parameters:
      - description: SKPD ID to delete
        in: body
        name: skpd
        required: true
        schema:
          $ref: '#/definitions/api.deleteSkpdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: SKPD deleted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.deleteSkpdResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: SKPD not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Delete SKPD data (soft delete)
      tags:
      - admin
  /api/admin/skpd/get:
    get:
      consumes:
      - application/json
      description: |-
        Get SKPD data based on query parameter (Admin only)

        Response data varies by parameter:
        - Without id parameter: Returns all SKPD with total count
        - With id parameter: Returns specific SKPD data

        SKPD data includes: skpd name, jenis (type), petugas count, creation/update dates
      parameters:
      - description: SKPD ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: SKPD data retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.getAllSkpdResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: SKPD not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get SKPD data
      tags:
      - admin
  /api/admin/skpd/insert:
    post:
      consumes:
      - application/json
      description: |-
        Insert new SKPD data (Admin only)

        Inserts SKPD record with data including:
        - skpd (nama SKPD), jenis (puskesmas/kelurahan/skpd)
        - Validates uniqueness of SKPD name within the same jenis
        - Supports different types of SKPD organizations
      parameters:
      - description: SKPD data
        in: body
        name: skpd
        required: true
        schema:
          $ref: '#/definitions/api.insertSkpdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: SKPD inserted successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.insertSkpdResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Insert new SKPD
      tags:
      - admin
  /api/admin/skpd/restore:
    post:
      consumes:
      - application/json
      description: Restore soft deleted SKPD data by clearing deleted_date and deleted_id
        (Admin only)
      parameters:
      - description: SKPD ID to restore
        in: body
        name: skpd
        required: true
        schema:
          $ref: '#/definitions/api.deleteSkpdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: SKPD restored successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.deleteSkpdResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: SKPD not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Restore deleted SKPD data
      tags:
      - admin
  /api/admin/skpd/update:
    put:
      consumes:
      - application/json
      description: |-
        Update existing SKPD data (Admin only)

        Updates SKPD record with new data including:
        - skpd (nama SKPD), jenis (puskesmas/kelurahan/skpd)
        - Validates uniqueness of SKPD name within the same jenis (excluding current record)
        - Checks for related petugas kesehatan before allowing jenis change
      parameters:
      - description: Updated SKPD data
        in: body
        name: skpd
        required: true
        schema:
          $ref: '#/definitions/api.updateSkpdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: SKPD updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.updateSkpdResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: SKPD not found
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Update SKPD data
      tags:
      - admin
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login with email and password
      parameters:
      - description: Login request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth.loginResponse'
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: User login
      tags:
      - auth
  /api/auth/profile:
    get:
      consumes:
      - application/json
      description: |-
        Get user profile data based on JWT token and role

        Response data varies by role:
        - masyarakat: {id, nama, alamat}
        - petugas kesehatan: {id, id_skpd, nama, created_date}
        - admin: {nama: "Administrator"}
      produces:
      - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/auth.userProfileResponse'
                  - properties:
                      data:
                        type: object
                    type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - Bearer: []
      summary: Get user profile
      tags:
      - auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email, nama, password, and alamat
      parameters:
      - description: Register request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/auth.registerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Invalid request
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            allOf:
            - $ref: '#/definitions/object.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: User registration
      tags:
      - auth
swagger: "2.0"
