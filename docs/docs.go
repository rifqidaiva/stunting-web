// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/admin/balita/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete balita data by setting deleted_date and deleted_id (Admin only)\n\nPerforms soft delete operation:\n- Sets deleted_date to current timestamp\n- Sets deleted_id to current user ID\n- Data remains in database but is excluded from queries\n- Can be restored if needed in the future\n- Checks for related records before deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete balita data (soft delete)",
                "parameters": [
                    {
                        "description": "Balita ID to delete",
                        "name": "balita",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.deleteBalitaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balita deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.deleteBalitaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Balita not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/balita/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get balita data based on query parameter (Admin only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all balita with total count\n- With id parameter: Returns specific balita data\n\nBalita data includes: nama, tanggal_lahir, jenis_kelamin, berat_lahir, tinggi_lahir, umur, keluarga info, location info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get balita data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Balita ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balita data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.getAllBalitaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Balita not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/balita/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new balita data (Admin only)\n\nInserts balita record with data including:\n- id_keluarga, nama, tanggal_lahir, jenis_kelamin\n- berat_lahir (in grams), tinggi_lahir (in cm)\n- Validates keluarga existence and balita age criteria (under 5 years)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Insert new balita",
                "parameters": [
                    {
                        "description": "Balita data",
                        "name": "balita",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.insertBalitaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balita inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.insertBalitaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/balita/restore": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Restore soft deleted balita data by clearing deleted_date and deleted_id (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Restore deleted balita data",
                "parameters": [
                    {
                        "description": "Balita ID to restore",
                        "name": "balita",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.deleteBalitaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balita restored successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.deleteBalitaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Balita not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/balita/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing balita data (Admin only)\n\nUpdates balita record with new data including:\n- id_keluarga, nama, tanggal_lahir, jenis_kelamin\n- berat_lahir (in grams), tinggi_lahir (in cm)\n- Validates keluarga existence, balita age criteria, and prevents duplicates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update balita data",
                "parameters": [
                    {
                        "description": "Updated balita data",
                        "name": "balita",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.updateBalitaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balita updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.updateBalitaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Balita not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/geojson-balita-points": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get balita locations as GeoJSON points with status laporan (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get balita points GeoJSON",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by status laporan",
                        "name": "status_laporan",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by kecamatan",
                        "name": "id_kecamatan",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by kelurahan",
                        "name": "id_kelurahan",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balita points GeoJSON retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/object.GeoJSONFeatureCollection"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/geojson-kecamatan": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get kecamatan boundary areas as GeoJSON MultiPolygon (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get kecamatan area GeoJSON",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Specific Kecamatan ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kecamatan GeoJSON retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/object.GeoJSONFeatureCollection"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/geojson-kelurahan": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get kelurahan boundary areas as GeoJSON MultiPolygon (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get kelurahan area GeoJSON",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Specific Kelurahan ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by Kecamatan ID",
                        "name": "id_kecamatan",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kelurahan GeoJSON retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/object.GeoJSONFeatureCollection"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/intervensi-petugas/assign": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Assign petugas kesehatan to specific intervensi (Admin only)\n\nCreates assignment between petugas and intervensi:\n- Validates both intervensi and petugas existence\n- Prevents duplicate assignments\n- Ensures petugas is active and not soft deleted\n- Ensures intervensi is active and not soft deleted",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Assign petugas to intervensi",
                "parameters": [
                    {
                        "description": "Assignment data",
                        "name": "assignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.assignIntervensiPetugasRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Petugas assigned successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.assignIntervensiPetugasResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/intervensi-petugas/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get intervensi petugas assignments based on query parameter (Admin only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all assignments with total count\n- With id parameter: Returns specific assignment data\n- With id_intervensi parameter: Returns all petugas assigned to specific intervensi\n- With id_petugas_kesehatan parameter: Returns all intervensi assigned to specific petugas\n\nAssignment data includes: intervensi info, petugas info, SKPD info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get intervensi petugas assignments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Intervensi ID",
                        "name": "id_intervensi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Petugas Kesehatan ID",
                        "name": "id_petugas_kesehatan",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assignment data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.getAllIntervensiPetugasResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Assignment not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/intervensi-petugas/remove": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Remove petugas kesehatan assignment from intervensi (Admin only)\n\nRemoves assignment between petugas and intervensi:\n- Validates assignment existence\n- Provides detailed information about removed assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Remove petugas assignment from intervensi",
                "parameters": [
                    {
                        "description": "Assignment ID to remove",
                        "name": "assignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.removeIntervensiPetugasRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assignment removed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.removeIntervensiPetugasResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Assignment not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/intervensi/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete intervensi data by setting deleted_date and deleted_id (Admin only)\n\nPerforms soft delete operation:\n- Sets deleted_date to current timestamp\n- Sets deleted_id to current user ID\n- Data remains in database but is excluded from queries\n- Can be restored if needed in the future\n- Checks for related records before deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete intervensi data (soft delete)",
                "parameters": [
                    {
                        "description": "Intervensi ID to delete",
                        "name": "intervensi",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.deleteIntervensiRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Intervensi deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.deleteIntervensiResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Intervensi not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/intervensi/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get intervensi data based on query parameter (Admin only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all intervensi with total count\n- With id parameter: Returns specific intervensi data\n\nIntervensi data includes: jenis, tanggal, deskripsi, hasil, petugas count, riwayat count, creation/update info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get intervensi data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Intervensi ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Intervensi data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.getAllIntervensiResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Intervensi not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/intervensi/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new intervensi data (Admin only)\n\nCreates a new intervensi record with:\n- id_balita: ID of the balita being intervened\n- jenis: type of intervention (gizi, kesehatan, sosial)\n- tanggal: intervention date (YYYY-MM-DD format)\n- deskripsi: detailed description of the intervention\n- hasil: results or outcomes of the intervention\n- Validates intervention type and date constraints",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Insert new intervensi",
                "parameters": [
                    {
                        "description": "Intervensi data",
                        "name": "intervensi",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.insertIntervensiRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Intervensi inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.insertIntervensiResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/intervensi/restore": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Restore soft deleted intervensi data by clearing deleted_date and deleted_id (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Restore deleted intervensi data",
                "parameters": [
                    {
                        "description": "Intervensi ID to restore",
                        "name": "intervensi",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.deleteIntervensiRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Intervensi restored successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.deleteIntervensiResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Intervensi not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/intervensi/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing intervensi data (Admin only)\n\nUpdates intervensi record including:\n- id_balita: ID of the balita being intervened\n- jenis: type of intervention (gizi, kesehatan, sosial)\n- tanggal: intervention date (YYYY-MM-DD format)\n- deskripsi: detailed description of the intervention\n- hasil: results or outcomes of the intervention\n- Validates intervention type and date constraints\n- Checks for related records before allowing changes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update intervensi data",
                "parameters": [
                    {
                        "description": "Updated intervensi data",
                        "name": "intervensi",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.updateIntervensiRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Intervensi updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.updateIntervensiResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Intervensi not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/keluarga/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete keluarga data by setting deleted_date and deleted_id (Admin only)\n\nPerforms soft delete operation:\n- Sets deleted_date to current timestamp\n- Sets deleted_id to current user ID\n- Data remains in database but is excluded from queries\n- Can be restored if needed in the future",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete keluarga data (soft delete)",
                "parameters": [
                    {
                        "description": "Keluarga ID to delete",
                        "name": "keluarga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.deleteKeluargaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keluarga deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.deleteKeluargaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Keluarga not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/keluarga/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get keluarga data based on query parameter (Admin only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all keluarga with total count\n- With id parameter: Returns specific keluarga data\n\nKeluarga data includes: nomor_kk, nama_ayah, nama_ibu, nik_ayah, nik_ibu, alamat, rt, rw, kelurahan, kecamatan, koordinat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get keluarga data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keluarga ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keluarga data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.getAllKeluargaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Keluarga not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/keluarga/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new keluarga data (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Insert new keluarga",
                "parameters": [
                    {
                        "description": "Keluarga data",
                        "name": "keluarga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.insertKeluargaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keluarga inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.insertKeluargaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/keluarga/restore": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Restore soft deleted keluarga data by clearing deleted_date and deleted_id (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Restore deleted keluarga data",
                "parameters": [
                    {
                        "description": "Keluarga ID to restore",
                        "name": "keluarga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.deleteKeluargaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keluarga restored successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.deleteKeluargaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Keluarga not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/keluarga/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing keluarga data (Admin only)\n\nUpdates keluarga record with new data including:\n- nomor_kk, nama_ayah, nama_ibu, nik_ayah, nik_ibu\n- alamat, rt, rw, id_kelurahan, koordinat\n- Validates uniqueness of nomor_kk and NIK (excluding current record)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update keluarga data",
                "parameters": [
                    {
                        "description": "Updated keluarga data",
                        "name": "keluarga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.updateKeluargaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keluarga updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.updateKeluargaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Keluarga not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/laporan-masyarakat/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete laporan masyarakat data by setting deleted_date and deleted_id (Admin only)\n\nPerforms soft delete operation:\n- Sets deleted_date to current timestamp\n- Sets deleted_id to current user ID\n- Data remains in database but is excluded from queries\n- Can be restored if needed in the future\n- Checks for related records before deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete laporan masyarakat data (soft delete)",
                "parameters": [
                    {
                        "description": "Laporan Masyarakat ID to delete",
                        "name": "laporan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.deleteLaporanMasyarakatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Laporan masyarakat deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.deleteLaporanMasyarakatResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Laporan masyarakat not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/laporan-masyarakat/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get laporan masyarakat data based on query parameter (Admin only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all laporan masyarakat with total count\n- With id parameter: Returns specific laporan masyarakat data\n\nLaporan masyarakat data includes: pelapor info, balita info, keluarga info, status laporan, contact details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get laporan masyarakat data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Laporan Masyarakat ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Laporan masyarakat data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.getAllLaporanMasyarakatResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Laporan masyarakat not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/laporan-masyarakat/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new laporan masyarakat data (Admin only)\n\nInserts laporan masyarakat record with data including:\n- id_masyarakat (optional, null if admin report), id_balita, id_status_laporan\n- tanggal_laporan, hubungan_dengan_balita, nomor_hp_pelapor, nomor_hp_keluarga_balita\n- Validates balita existence, status laporan, and masyarakat (if provided)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Insert new laporan masyarakat",
                "parameters": [
                    {
                        "description": "Laporan masyarakat data",
                        "name": "laporan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.insertLaporanMasyarakatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Laporan masyarakat inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.insertLaporanMasyarakatResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/laporan-masyarakat/restore": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Restore soft deleted laporan masyarakat data by clearing deleted_date and deleted_id (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Restore deleted laporan masyarakat data",
                "parameters": [
                    {
                        "description": "Laporan Masyarakat ID to restore",
                        "name": "laporan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.deleteLaporanMasyarakatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Laporan masyarakat restored successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.deleteLaporanMasyarakatResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Laporan masyarakat not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/laporan-masyarakat/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing laporan masyarakat data (Admin only)\n\nUpdates laporan masyarakat record with new data including:\n- id_masyarakat (optional, null if admin report), id_balita, id_status_laporan\n- tanggal_laporan, hubungan_dengan_balita, nomor_hp_pelapor, nomor_hp_keluarga_balita\n- Validates balita existence, status laporan, masyarakat (if provided), and prevents duplicates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update laporan masyarakat data",
                "parameters": [
                    {
                        "description": "Updated laporan masyarakat data",
                        "name": "laporan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.updateLaporanMasyarakatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Laporan masyarakat updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.updateLaporanMasyarakatResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Laporan masyarakat not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/master-kecamatan": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all kecamatan for dropdown/reference (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get kecamatan master data",
                "responses": {
                    "200": {
                        "description": "Kecamatan data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.getAllKecamatanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/master-kelurahan": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get kelurahan data with optional kecamatan filter (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get kelurahan master data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by Kecamatan ID",
                        "name": "id_kecamatan",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kelurahan data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.getAllKelurahanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/master-masyarakat": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all masyarakat for dropdown/reference (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get masyarakat master data",
                "responses": {
                    "200": {
                        "description": "Masyarakat data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.getAllMasyarakatResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/master-skpd": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get SKPD data with optional jenis filter (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get SKPD master data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by SKPD jenis (puskesmas, kelurahan, skpd)",
                        "name": "jenis",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SKPD data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.getAllSkpdMasterResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/master-status-laporan": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all status laporan for dropdown/reference (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get status laporan master data",
                "responses": {
                    "200": {
                        "description": "Status laporan data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.getAllStatusLaporanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/petugas-kesehatan/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete petugas kesehatan data by setting deleted_date and deleted_id (Admin only)\n\nPerforms soft delete operation:\n- Sets deleted_date to current timestamp\n- Sets deleted_id to current user ID\n- Data remains in database but is excluded from queries\n- Can be restored if needed in the future\n- Checks for related records before deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete petugas kesehatan data (soft delete)",
                "parameters": [
                    {
                        "description": "Petugas Kesehatan ID to delete",
                        "name": "petugas",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.deletePetugasKesehatanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Petugas kesehatan deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.deletePetugasKesehatanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Petugas kesehatan not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/petugas-kesehatan/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get petugas kesehatan data based on query parameter (Admin only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all petugas kesehatan with total count\n- With id parameter: Returns specific petugas kesehatan data\n\nPetugas kesehatan data includes: nama, email, SKPD info, intervensi count, creation/update dates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get petugas kesehatan data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Petugas Kesehatan ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Petugas kesehatan data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.getAllPetugasKesehatanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Petugas kesehatan not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/petugas-kesehatan/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new petugas kesehatan data (Admin only)\n\nCreates a complete petugas kesehatan record including:\n- Creates pengguna account with email and hashed password\n- Creates petugas_kesehatan record linked to SKPD\n- Sets role as \"petugas kesehatan\" in pengguna table\n- Validates email uniqueness and SKPD existence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Insert new petugas kesehatan",
                "parameters": [
                    {
                        "description": "Petugas kesehatan data",
                        "name": "petugas",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.insertPetugasKesehatanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Petugas kesehatan inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.insertPetugasKesehatanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/petugas-kesehatan/restore": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Restore soft deleted petugas kesehatan data by clearing deleted_date and deleted_id (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Restore deleted petugas kesehatan data",
                "parameters": [
                    {
                        "description": "Petugas Kesehatan ID to restore",
                        "name": "petugas",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.deletePetugasKesehatanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Petugas kesehatan restored successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.deletePetugasKesehatanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Petugas kesehatan not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/petugas-kesehatan/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing petugas kesehatan data (Admin only)\n\nUpdates petugas kesehatan record including:\n- Updates pengguna account (email and password)\n- Updates petugas_kesehatan record (nama and SKPD)\n- Validates email uniqueness (excluding current record)\n- Validates SKPD existence and name uniqueness within SKPD\n- Checks for related intervensi before allowing SKPD change\n- Password is required and will be updated if different from current",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update petugas kesehatan data",
                "parameters": [
                    {
                        "description": "Updated petugas kesehatan data",
                        "name": "petugas",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.updatePetugasKesehatanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Petugas kesehatan updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.updatePetugasKesehatanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Petugas kesehatan not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/riwayat-pemeriksaan/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete riwayat pemeriksaan data by setting deleted_date and deleted_id (Admin only)\n\nPerforms soft delete operation:\n- Sets deleted_date to current timestamp\n- Sets deleted_id to current user ID\n- Data remains in database but is excluded from queries\n- Can be restored if needed in the future\n- Provides detailed information about the deleted medical record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete riwayat pemeriksaan data (soft delete)",
                "parameters": [
                    {
                        "description": "Riwayat Pemeriksaan ID to delete",
                        "name": "riwayat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.deleteRiwayatPemeriksaanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Riwayat pemeriksaan deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.deleteRiwayatPemeriksaanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Riwayat pemeriksaan not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/riwayat-pemeriksaan/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get riwayat pemeriksaan data based on query parameter (Admin only)\n\nResponse data varies by parameter:\n- Without any parameter: Returns all riwayat pemeriksaan with total count\n- With id parameter: Returns specific riwayat pemeriksaan data\n- With id_balita parameter: Returns all riwayat pemeriksaan for specific balita\n- With id_laporan_masyarakat parameter: Returns all riwayat pemeriksaan for specific laporan\n- With id_intervensi parameter: Returns all riwayat pemeriksaan for specific intervensi\n\nRiwayat pemeriksaan data includes: balita info, intervensi info, laporan info, examination details, location info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get riwayat pemeriksaan data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Riwayat Pemeriksaan ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Balita ID",
                        "name": "id_balita",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Laporan Masyarakat ID",
                        "name": "id_laporan_masyarakat",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Intervensi ID",
                        "name": "id_intervensi",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Riwayat pemeriksaan data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.getAllRiwayatPemeriksaanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Riwayat pemeriksaan not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/riwayat-pemeriksaan/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new riwayat pemeriksaan data (Admin only)\n\nCreates a new riwayat pemeriksaan record with:\n- id_balita: balita being examined\n- id_intervensi: related intervention program\n- id_laporan_masyarakat: related masyarakat report\n- tanggal: examination date (YYYY-MM-DD format)\n- berat_badan: weight in kg (decimal)\n- tinggi_badan: height in cm (decimal)\n- status_gizi: nutritional status (normal, stunting, gizi buruk)\n- keterangan: examination notes and recommendations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Insert new riwayat pemeriksaan",
                "parameters": [
                    {
                        "description": "Riwayat pemeriksaan data",
                        "name": "riwayat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.insertRiwayatPemeriksaanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Riwayat pemeriksaan inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.insertRiwayatPemeriksaanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/riwayat-pemeriksaan/restore": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Restore soft deleted riwayat pemeriksaan data by clearing deleted_date and deleted_id (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Restore deleted riwayat pemeriksaan data",
                "parameters": [
                    {
                        "description": "Riwayat Pemeriksaan ID to restore",
                        "name": "riwayat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.deleteRiwayatPemeriksaanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Riwayat pemeriksaan restored successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.deleteRiwayatPemeriksaanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Riwayat pemeriksaan not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/riwayat-pemeriksaan/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing riwayat pemeriksaan data (Admin only)\n\nUpdates riwayat pemeriksaan record with new data including:\n- id_balita: balita being examined\n- id_intervensi: related intervention program\n- id_laporan_masyarakat: related masyarakat report\n- tanggal: examination date (YYYY-MM-DD format)\n- berat_badan: weight in kg (decimal)\n- tinggi_badan: height in cm (decimal)\n- status_gizi: nutritional status (normal, stunting, gizi buruk)\n- keterangan: examination notes and recommendations\n- Validates existence of balita and intervensi, prevents duplicates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update riwayat pemeriksaan data",
                "parameters": [
                    {
                        "description": "Updated riwayat pemeriksaan data",
                        "name": "riwayat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.updateRiwayatPemeriksaanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Riwayat pemeriksaan updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.updateRiwayatPemeriksaanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Riwayat pemeriksaan not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/skpd/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete SKPD data by setting deleted_date and deleted_id (Admin only)\n\nPerforms soft delete operation:\n- Sets deleted_date to current timestamp\n- Sets deleted_id to current user ID\n- Data remains in database but is excluded from queries\n- Can be restored if needed in the future\n- Checks for related records before deletion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete SKPD data (soft delete)",
                "parameters": [
                    {
                        "description": "SKPD ID to delete",
                        "name": "skpd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.deleteSkpdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SKPD deleted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.deleteSkpdResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "SKPD not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/skpd/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get SKPD data based on query parameter (Admin only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all SKPD with total count\n- With id parameter: Returns specific SKPD data\n\nSKPD data includes: skpd name, jenis (type), petugas count, creation/update dates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get SKPD data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SKPD ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SKPD data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.getAllSkpdResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "SKPD not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/skpd/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new SKPD data (Admin only)\n\nInserts SKPD record with data including:\n- skpd (nama SKPD), jenis (puskesmas/kelurahan/skpd)\n- Validates uniqueness of SKPD name within the same jenis\n- Supports different types of SKPD organizations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Insert new SKPD",
                "parameters": [
                    {
                        "description": "SKPD data",
                        "name": "skpd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.insertSkpdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SKPD inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.insertSkpdResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/skpd/restore": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Restore soft deleted SKPD data by clearing deleted_date and deleted_id (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Restore deleted SKPD data",
                "parameters": [
                    {
                        "description": "SKPD ID to restore",
                        "name": "skpd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.deleteSkpdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SKPD restored successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.deleteSkpdResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "SKPD not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/admin/skpd/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing SKPD data (Admin only)\n\nUpdates SKPD record with new data including:\n- skpd (nama SKPD), jenis (puskesmas/kelurahan/skpd)\n- Validates uniqueness of SKPD name within the same jenis (excluding current record)\n- Checks for related petugas kesehatan before allowing jenis change",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update SKPD data",
                "parameters": [
                    {
                        "description": "Updated SKPD data",
                        "name": "skpd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.updateSkpdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SKPD updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/admin.updateSkpdResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "SKPD not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "Login with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/auth.loginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/auth/profile": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get user profile data based on JWT token and role\n\nResponse data varies by role:\n- masyarakat: {id, nama, alamat}\n- petugas kesehatan: {id, id_skpd, nama, created_date}\n- admin: {nama: \"Administrator\"}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/auth.userProfileResponse"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "data": {
                                                            "type": "object"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Register a new user with email, nama, password, and alamat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "description": "Register request",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.registerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/community/balita/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get balita data for community/masyarakat users (own data only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all balita from user's keluarga\n- With id parameter: Returns specific balita data (if owned by user)\n\nData includes balita information, laporan status, medical history summary,\nand action permissions (edit/report capabilities).\nUsers can only access balita from keluarga they have created themselves.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "community"
                ],
                "summary": "Get balita data (Community)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Balita ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balita data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/community.getAllBalitaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden - Masyarakat role required",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Balita not found or not owned by user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/community/balita/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new balita data for community/masyarakat users\n\nThis endpoint allows masyarakat users to register balita data\nfor families they have created. The balita will be linked to the\nspecified keluarga and can later be reported for stunting assessment.\n\nValidation includes:\n- Keluarga ownership verification (user can only add balita to their own keluarga)\n- Age criteria check (must be under 5 years old for balita classification)\n- Birth data validation (weight, height within reasonable ranges)\n- Duplicate prevention (same name and birth date in same keluarga)\n- Format validation for all fields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "community"
                ],
                "summary": "Insert new balita (Community)",
                "parameters": [
                    {
                        "description": "Balita data",
                        "name": "balita",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/community.insertBalitaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balita inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/community.insertBalitaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden - Masyarakat role required or not owner of keluarga",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/community/balita/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing balita data for community/masyarakat users\n\nThis endpoint allows masyarakat users to update balita data\nthat they have previously created. Users can only update balita\nfrom keluarga they own and only if there are no active reports.\n\nValidation includes:\n- Balita ownership verification (through keluarga ownership)\n- Age criteria check (must be under 5 years old for balita classification)\n- Birth data validation (weight, height within reasonable ranges)\n- Duplicate prevention (same name and birth date in same keluarga)\n- Business rule checks (no active reports constraint)\n- Format validation for all fields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "community"
                ],
                "summary": "Update balita data (Community)",
                "parameters": [
                    {
                        "description": "Updated balita data",
                        "name": "balita",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/community.updateBalitaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balita updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/community.updateBalitaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden - Masyarakat role required or not owner",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Balita not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "409": {
                        "description": "Conflict - Cannot update due to active reports",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/community/keluarga/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get keluarga data for community/masyarakat users (own data only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all keluarga created by the user\n- With id parameter: Returns specific keluarga data (if owned by user)\n\nData includes family information, balita count, laporan status, and edit permissions.\nUsers can only access keluarga data they have created themselves.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "community"
                ],
                "summary": "Get keluarga data (Community)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keluarga ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keluarga data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/community.getAllKeluargaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden - Masyarakat role required",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Keluarga not found or not owned by user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/community/keluarga/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new keluarga data for community/masyarakat users\n\nThis endpoint allows masyarakat users to register family data\nwhen reporting balita. The data will be linked to the reporting user.\n\nValidation includes:\n- Nomor KK and NIK uniqueness check\n- Format validation for all fields\n- Kelurahan existence validation\n- Coordinate bounds validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "community"
                ],
                "summary": "Insert new keluarga (Community)",
                "parameters": [
                    {
                        "description": "Keluarga data",
                        "name": "keluarga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/community.insertKeluargaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keluarga inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/community.insertKeluargaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden - Masyarakat role required",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/community/keluarga/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update existing keluarga data for community/masyarakat users\n\nThis endpoint allows masyarakat users to update family data\nthat they have previously created. Users can only update their own data.\n\nValidation includes:\n- Ownership verification (user can only update their own data)\n- Nomor KK and NIK uniqueness check (excluding current record)\n- Format validation for all fields\n- Kelurahan existence validation\n- Coordinate bounds validation\n- Business rule checks (no active reports constraint)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "community"
                ],
                "summary": "Update keluarga data (Community)",
                "parameters": [
                    {
                        "description": "Keluarga data to update",
                        "name": "keluarga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/community.updateKeluargaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keluarga updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/community.updateKeluargaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden - Masyarakat role required or not owner",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Keluarga not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "409": {
                        "description": "Conflict - Cannot update due to active reports",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/community/laporan/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get laporan data for community/masyarakat users (own reports only)\n\nResponse data varies by parameter:\n- Without id parameter: Returns all laporan created by the user\n- With id parameter: Returns specific laporan data (if owned by user)\n\nData includes laporan information, balita details, keluarga info, status tracking,\nrelated medical records count, and action permissions.\nUsers can only access laporan they have created themselves.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "community"
                ],
                "summary": "Get laporan data (Community)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Laporan ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Laporan data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/community.getAllLaporanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden - Masyarakat role required",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Laporan not found or not owned by user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/community/laporan/insert": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Insert new laporan for community/masyarakat users\n\nThis endpoint allows masyarakat users to report balita for stunting assessment.\nThe laporan will be automatically set with \"Belum diproses\" status and linked\nto the reporting masyarakat user.\n\nValidation includes:\n- Balita ownership verification (user can only report balita from their own keluarga)\n- Duplicate prevention (same balita and date)\n- Business rule checks (no pending reports for same balita)\n- Date validation (not future, not older than 1 year)\n- Contact information validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "community"
                ],
                "summary": "Insert new laporan (Community)",
                "parameters": [
                    {
                        "description": "Laporan data",
                        "name": "laporan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/community.insertLaporanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Laporan inserted successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/community.insertLaporanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden - Masyarakat role required or not owner of balita",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "409": {
                        "description": "Conflict - Pending report exists for this balita",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/community/master-kecamatan": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all kecamatan for dropdown/reference (Masyarakat only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "community"
                ],
                "summary": "Get kecamatan master data (Community)",
                "responses": {
                    "200": {
                        "description": "Kecamatan data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/community.getAllKecamatanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden - Masyarakat role required",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/community/master-kelurahan": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get kelurahan data with optional kecamatan filter (Masyarakat only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "community"
                ],
                "summary": "Get kelurahan master data (Community)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by Kecamatan ID",
                        "name": "id_kecamatan",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kelurahan data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/community.getAllKelurahanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden - Masyarakat role required",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/community/master-status-laporan": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all status laporan for reference/display (Masyarakat only)\nThis is primarily for display purposes to show status meanings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "community"
                ],
                "summary": "Get status laporan master data (Community)",
                "responses": {
                    "200": {
                        "description": "Status laporan data retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/community.getAllStatusLaporanResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden - Masyarakat role required",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/health-worker/assignment/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all interventions assigned to the authenticated health worker\n\nResponse data varies by parameter:\n- Without id parameter: Returns all assigned interventions\n- With id parameter: Returns specific intervention details (if assigned to user)\n\nData includes intervention information, balita details, family info, medical history,\nrelated reports, and action permissions based on intervention status.\nHealth workers can only access interventions assigned to them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health-worker"
                ],
                "summary": "Get assigned interventions (Health Worker)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Intervention ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by intervention status (pending, in_progress, completed)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assigned interventions retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/healthworker.getAllAssignedIntervensiResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden - Health worker role required",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Intervention not found or not assigned to user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/object.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin.assignIntervensiPetugasRequest": {
            "type": "object",
            "properties": {
                "id_intervensi": {
                    "type": "string"
                },
                "id_petugas_kesehatan": {
                    "type": "string"
                }
            }
        },
        "admin.assignIntervensiPetugasResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.balitaResponse": {
            "type": "object",
            "properties": {
                "berat_lahir": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_keluarga": {
                    "type": "string"
                },
                "jenis_kelamin": {
                    "type": "string"
                },
                "kecamatan": {
                    "type": "string"
                },
                "kelurahan": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "tanggal_lahir": {
                    "type": "string"
                },
                "tinggi_lahir": {
                    "type": "string"
                },
                "umur": {
                    "description": "calculated field in months",
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "admin.deleteBalitaRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "admin.deleteBalitaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.deleteIntervensiRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "admin.deleteIntervensiResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.deleteKeluargaRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "admin.deleteKeluargaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.deleteLaporanMasyarakatRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "admin.deleteLaporanMasyarakatResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.deletePetugasKesehatanRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "admin.deletePetugasKesehatanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.deleteRiwayatPemeriksaanRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "admin.deleteRiwayatPemeriksaanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.deleteSkpdRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "admin.deleteSkpdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.getAllBalitaResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.balitaResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "admin.getAllIntervensiPetugasResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.intervensiPetugasResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "admin.getAllIntervensiResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.intervensiResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "admin.getAllKecamatanResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.kecamatanResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "admin.getAllKeluargaResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.keluargaResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "admin.getAllKelurahanResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.kelurahanResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "admin.getAllLaporanMasyarakatResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.laporanMasyarakatResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "admin.getAllMasyarakatResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.masyarakatResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "admin.getAllPetugasKesehatanResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.petugasKesehatanResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "admin.getAllRiwayatPemeriksaanResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.riwayatPemeriksaanResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "admin.getAllSkpdMasterResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.skpdMasterResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "admin.getAllSkpdResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.skpdResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "admin.getAllStatusLaporanResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/admin.statusLaporanResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "admin.insertBalitaRequest": {
            "type": "object",
            "properties": {
                "berat_lahir": {
                    "description": "in grams",
                    "type": "string"
                },
                "id_keluarga": {
                    "type": "string"
                },
                "jenis_kelamin": {
                    "description": "\"L\" or \"P\"",
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "tanggal_lahir": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                },
                "tinggi_lahir": {
                    "description": "in cm",
                    "type": "string"
                }
            }
        },
        "admin.insertBalitaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "admin.insertIntervensiRequest": {
            "type": "object",
            "properties": {
                "deskripsi": {
                    "type": "string"
                },
                "hasil": {
                    "type": "string"
                },
                "id_balita": {
                    "description": "\u003c- Field baru",
                    "type": "string"
                },
                "jenis": {
                    "description": "\"gizi\", \"kesehatan\", \"sosial\"",
                    "type": "string"
                },
                "tanggal": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                }
            }
        },
        "admin.insertIntervensiResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "admin.insertKeluargaRequest": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "id_kelurahan": {
                    "type": "string"
                },
                "koordinat": {
                    "description": "[longitude, latitude]",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nik_ayah": {
                    "type": "string"
                },
                "nik_ibu": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "rt": {
                    "type": "string"
                },
                "rw": {
                    "type": "string"
                }
            }
        },
        "admin.insertKeluargaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "admin.insertLaporanMasyarakatRequest": {
            "type": "object",
            "properties": {
                "hubungan_dengan_balita": {
                    "type": "string"
                },
                "id_balita": {
                    "type": "string"
                },
                "id_masyarakat": {
                    "description": "dapat null jika laporan dari admin",
                    "type": "string"
                },
                "id_status_laporan": {
                    "type": "string"
                },
                "nomor_hp_keluarga_balita": {
                    "type": "string"
                },
                "nomor_hp_pelapor": {
                    "type": "string"
                },
                "tanggal_laporan": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                }
            }
        },
        "admin.insertLaporanMasyarakatResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "admin.insertPetugasKesehatanRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id_skpd": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "admin.insertPetugasKesehatanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "admin.insertRiwayatPemeriksaanRequest": {
            "type": "object",
            "properties": {
                "berat_badan": {
                    "description": "in kg (decimal)",
                    "type": "string"
                },
                "id_balita": {
                    "type": "string"
                },
                "id_intervensi": {
                    "type": "string"
                },
                "id_laporan_masyarakat": {
                    "description": "\u003c- Field baru wajib",
                    "type": "string"
                },
                "keterangan": {
                    "type": "string"
                },
                "status_gizi": {
                    "description": "\"normal\", \"stunting\", \"gizi buruk\"",
                    "type": "string"
                },
                "tanggal": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                },
                "tinggi_badan": {
                    "description": "in cm (decimal)",
                    "type": "string"
                }
            }
        },
        "admin.insertRiwayatPemeriksaanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "admin.insertSkpdRequest": {
            "type": "object",
            "properties": {
                "jenis": {
                    "description": "\"puskesmas\", \"kelurahan\", \"skpd\"",
                    "type": "string"
                },
                "skpd": {
                    "type": "string"
                }
            }
        },
        "admin.insertSkpdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "admin.intervensiPetugasResponse": {
            "type": "object",
            "properties": {
                "deskripsi_intervensi": {
                    "type": "string"
                },
                "email_petugas": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_intervensi": {
                    "type": "string"
                },
                "id_petugas_kesehatan": {
                    "type": "string"
                },
                "jenis_intervensi": {
                    "type": "string"
                },
                "jenis_skpd": {
                    "type": "string"
                },
                "nama_petugas": {
                    "type": "string"
                },
                "skpd_petugas": {
                    "type": "string"
                },
                "tanggal_intervensi": {
                    "type": "string"
                }
            }
        },
        "admin.intervensiResponse": {
            "type": "object",
            "properties": {
                "created_by": {
                    "description": "nama admin yang membuat",
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "deskripsi": {
                    "type": "string"
                },
                "hasil": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_balita": {
                    "description": "\u003c- Field baru",
                    "type": "string"
                },
                "jenis": {
                    "type": "string"
                },
                "nama_balita": {
                    "description": "\u003c- Field baru untuk display",
                    "type": "string"
                },
                "petugas_count": {
                    "description": "jumlah petugas yang di-assign",
                    "type": "integer"
                },
                "riwayat_count": {
                    "description": "jumlah riwayat pemeriksaan terkait",
                    "type": "integer"
                },
                "tanggal": {
                    "type": "string"
                },
                "updated_by": {
                    "description": "nama admin yang mengupdate",
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "admin.kecamatanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "kecamatan": {
                    "type": "string"
                }
            }
        },
        "admin.keluargaResponse": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_kelurahan": {
                    "type": "string"
                },
                "kecamatan": {
                    "type": "string"
                },
                "kelurahan": {
                    "type": "string"
                },
                "koordinat": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nik_ayah": {
                    "type": "string"
                },
                "nik_ibu": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "rt": {
                    "type": "string"
                },
                "rw": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "admin.kelurahanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "id_kecamatan": {
                    "type": "string"
                },
                "kecamatan": {
                    "type": "string"
                },
                "kelurahan": {
                    "type": "string"
                }
            }
        },
        "admin.laporanMasyarakatResponse": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "email_pelapor": {
                    "type": "string"
                },
                "hubungan_dengan_balita": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_balita": {
                    "type": "string"
                },
                "id_masyarakat": {
                    "type": "string"
                },
                "id_status_laporan": {
                    "type": "string"
                },
                "jenis_laporan": {
                    "description": "\"masyarakat\" atau \"admin\"",
                    "type": "string"
                },
                "kecamatan": {
                    "type": "string"
                },
                "kelurahan": {
                    "type": "string"
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_balita": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nama_pelapor": {
                    "type": "string"
                },
                "nomor_hp_keluarga_balita": {
                    "type": "string"
                },
                "nomor_hp_pelapor": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "status_laporan": {
                    "type": "string"
                },
                "tanggal_laporan": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "admin.masyarakatResponse": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                }
            }
        },
        "admin.petugasKesehatanResponse": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_pengguna": {
                    "type": "string"
                },
                "id_skpd": {
                    "type": "string"
                },
                "intervensi_count": {
                    "description": "jumlah intervensi terkait",
                    "type": "integer"
                },
                "jenis_skpd": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "skpd": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "admin.removeIntervensiPetugasRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID dari tabel intervensi_petugas",
                    "type": "string"
                }
            }
        },
        "admin.removeIntervensiPetugasResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.riwayatPemeriksaanResponse": {
            "type": "object",
            "properties": {
                "berat_badan": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_balita": {
                    "type": "string"
                },
                "id_intervensi": {
                    "type": "string"
                },
                "id_laporan_masyarakat": {
                    "description": "\u003c- Field baru",
                    "type": "string"
                },
                "jenis_intervensi": {
                    "type": "string"
                },
                "jenis_kelamin": {
                    "type": "string"
                },
                "jenis_laporan": {
                    "description": "\u003c- Field baru (masyarakat/admin)",
                    "type": "string"
                },
                "kecamatan": {
                    "type": "string"
                },
                "kelurahan": {
                    "type": "string"
                },
                "keterangan": {
                    "type": "string"
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_balita": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "status_gizi": {
                    "type": "string"
                },
                "status_laporan": {
                    "description": "\u003c- Field baru",
                    "type": "string"
                },
                "tanggal": {
                    "type": "string"
                },
                "tanggal_intervensi": {
                    "type": "string"
                },
                "tanggal_laporan": {
                    "description": "\u003c- Field baru",
                    "type": "string"
                },
                "tinggi_badan": {
                    "type": "string"
                },
                "umur_balita": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "admin.skpdMasterResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jenis": {
                    "type": "string"
                },
                "skpd": {
                    "type": "string"
                }
            }
        },
        "admin.skpdResponse": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "jenis": {
                    "type": "string"
                },
                "petugas_count": {
                    "description": "jumlah petugas kesehatan terkait",
                    "type": "integer"
                },
                "skpd": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "admin.statusLaporanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "admin.updateBalitaRequest": {
            "type": "object",
            "properties": {
                "berat_lahir": {
                    "description": "in grams",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_keluarga": {
                    "type": "string"
                },
                "jenis_kelamin": {
                    "description": "\"L\" or \"P\"",
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "tanggal_lahir": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                },
                "tinggi_lahir": {
                    "description": "in cm",
                    "type": "string"
                }
            }
        },
        "admin.updateBalitaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.updateIntervensiRequest": {
            "type": "object",
            "properties": {
                "deskripsi": {
                    "type": "string"
                },
                "hasil": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_balita": {
                    "description": "\u003c- Field baru",
                    "type": "string"
                },
                "jenis": {
                    "description": "\"gizi\", \"kesehatan\", \"sosial\"",
                    "type": "string"
                },
                "tanggal": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                }
            }
        },
        "admin.updateIntervensiResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.updateKeluargaRequest": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_kelurahan": {
                    "type": "string"
                },
                "koordinat": {
                    "description": "[longitude, latitude]",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nik_ayah": {
                    "type": "string"
                },
                "nik_ibu": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "rt": {
                    "type": "string"
                },
                "rw": {
                    "type": "string"
                }
            }
        },
        "admin.updateKeluargaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.updateLaporanMasyarakatRequest": {
            "type": "object",
            "properties": {
                "hubungan_dengan_balita": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_balita": {
                    "type": "string"
                },
                "id_masyarakat": {
                    "description": "dapat null jika laporan dari admin",
                    "type": "string"
                },
                "id_status_laporan": {
                    "type": "string"
                },
                "nomor_hp_keluarga_balita": {
                    "type": "string"
                },
                "nomor_hp_pelapor": {
                    "type": "string"
                },
                "tanggal_laporan": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                }
            }
        },
        "admin.updateLaporanMasyarakatResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.updatePetugasKesehatanRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_skpd": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "password": {
                    "description": "Required - wajib diisi",
                    "type": "string"
                }
            }
        },
        "admin.updatePetugasKesehatanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.updateRiwayatPemeriksaanRequest": {
            "type": "object",
            "properties": {
                "berat_badan": {
                    "description": "in kg (decimal)",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_balita": {
                    "type": "string"
                },
                "id_intervensi": {
                    "type": "string"
                },
                "id_laporan_masyarakat": {
                    "description": "\u003c- Field baru wajib",
                    "type": "string"
                },
                "keterangan": {
                    "type": "string"
                },
                "status_gizi": {
                    "description": "\"normal\", \"stunting\", \"gizi buruk\"",
                    "type": "string"
                },
                "tanggal": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                },
                "tinggi_badan": {
                    "description": "in cm (decimal)",
                    "type": "string"
                }
            }
        },
        "admin.updateRiwayatPemeriksaanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "admin.updateSkpdRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jenis": {
                    "description": "\"puskesmas\", \"kelurahan\", \"skpd\"",
                    "type": "string"
                },
                "skpd": {
                    "type": "string"
                }
            }
        },
        "admin.updateSkpdResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "auth.loginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.loginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.registerRequest": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.userProfileResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "community.balitaResponse": {
            "type": "object",
            "properties": {
                "berat_lahir": {
                    "type": "string"
                },
                "can_edit": {
                    "type": "boolean"
                },
                "can_report": {
                    "type": "boolean"
                },
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_keluarga": {
                    "type": "string"
                },
                "jenis_kelamin": {
                    "type": "string"
                },
                "jumlah_laporan": {
                    "description": "Status untuk masyarakat",
                    "type": "integer"
                },
                "kecamatan": {
                    "type": "string"
                },
                "kelurahan": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "status_gizi_terakhir": {
                    "type": "string"
                },
                "status_laporan_aktif": {
                    "type": "string"
                },
                "tanggal_lahir": {
                    "type": "string"
                },
                "tanggal_pemeriksaan_terakhir": {
                    "type": "string"
                },
                "tinggi_lahir": {
                    "type": "string"
                },
                "umur": {
                    "description": "calculated field in months",
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "community.getAllBalitaResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/community.balitaResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "community.getAllKecamatanResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/community.kecamatanResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "community.getAllKeluargaResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/community.keluargaResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "community.getAllKelurahanResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/community.kelurahanResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "community.getAllLaporanResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/community.laporanResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "community.getAllStatusLaporanResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/community.statusLaporanResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "community.insertBalitaRequest": {
            "type": "object",
            "properties": {
                "berat_lahir": {
                    "description": "in grams",
                    "type": "string"
                },
                "id_keluarga": {
                    "type": "string"
                },
                "jenis_kelamin": {
                    "description": "\"L\" or \"P\"",
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "tanggal_lahir": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                },
                "tinggi_lahir": {
                    "description": "in cm",
                    "type": "string"
                }
            }
        },
        "community.insertBalitaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "community.insertKeluargaRequest": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "id_kelurahan": {
                    "type": "string"
                },
                "koordinat": {
                    "description": "[longitude, latitude]",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nik_ayah": {
                    "type": "string"
                },
                "nik_ibu": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "rt": {
                    "type": "string"
                },
                "rw": {
                    "type": "string"
                }
            }
        },
        "community.insertKeluargaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "community.insertLaporanRequest": {
            "type": "object",
            "properties": {
                "hubungan_dengan_balita": {
                    "type": "string"
                },
                "id_balita": {
                    "type": "string"
                },
                "nomor_hp_keluarga_balita": {
                    "type": "string"
                },
                "nomor_hp_pelapor": {
                    "type": "string"
                },
                "tanggal_laporan": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                }
            }
        },
        "community.insertLaporanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "community.kecamatanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "kecamatan": {
                    "type": "string"
                }
            }
        },
        "community.keluargaResponse": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "can_edit": {
                    "type": "boolean"
                },
                "created_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_kelurahan": {
                    "type": "string"
                },
                "jumlah_balita": {
                    "description": "Status untuk masyarakat",
                    "type": "integer"
                },
                "jumlah_laporan": {
                    "type": "integer"
                },
                "kecamatan": {
                    "type": "string"
                },
                "kelurahan": {
                    "type": "string"
                },
                "koordinat": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nik_ayah": {
                    "type": "string"
                },
                "nik_ibu": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "rt": {
                    "type": "string"
                },
                "rw": {
                    "type": "string"
                },
                "status_laporan_aktif": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "community.kelurahanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "id_kecamatan": {
                    "type": "string"
                },
                "kecamatan": {
                    "type": "string"
                },
                "kelurahan": {
                    "type": "string"
                }
            }
        },
        "community.laporanResponse": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "can_edit": {
                    "description": "Status untuk masyarakat",
                    "type": "boolean"
                },
                "created_date": {
                    "type": "string"
                },
                "hubungan_dengan_balita": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_balita": {
                    "type": "string"
                },
                "id_status_laporan": {
                    "type": "string"
                },
                "intervensi_terkait": {
                    "type": "integer"
                },
                "kecamatan": {
                    "type": "string"
                },
                "kelurahan": {
                    "type": "string"
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_balita": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nomor_hp_keluarga_balita": {
                    "type": "string"
                },
                "nomor_hp_pelapor": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "riwayat_pemeriksaan": {
                    "type": "integer"
                },
                "status_keterangan": {
                    "type": "string"
                },
                "status_laporan": {
                    "type": "string"
                },
                "tanggal_laporan": {
                    "type": "string"
                },
                "tanggal_terakhir_diproses": {
                    "type": "string"
                },
                "updated_date": {
                    "type": "string"
                }
            }
        },
        "community.statusLaporanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "community.updateBalitaRequest": {
            "type": "object",
            "properties": {
                "berat_lahir": {
                    "description": "in grams",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_keluarga": {
                    "type": "string"
                },
                "jenis_kelamin": {
                    "description": "\"L\" or \"P\"",
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "tanggal_lahir": {
                    "description": "Format: YYYY-MM-DD",
                    "type": "string"
                },
                "tinggi_lahir": {
                    "description": "in cm",
                    "type": "string"
                }
            }
        },
        "community.updateBalitaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "community.updateKeluargaRequest": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_kelurahan": {
                    "type": "string"
                },
                "koordinat": {
                    "description": "[longitude, latitude]",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nik_ayah": {
                    "type": "string"
                },
                "nik_ibu": {
                    "type": "string"
                },
                "nomor_kk": {
                    "type": "string"
                },
                "rt": {
                    "type": "string"
                },
                "rw": {
                    "type": "string"
                }
            }
        },
        "community.updateKeluargaResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "healthworker.assignedIntervensiResponse": {
            "type": "object",
            "properties": {
                "alamat": {
                    "type": "string"
                },
                "berat_badan_terakhir": {
                    "type": "string"
                },
                "can_add_medical_record": {
                    "description": "Actions",
                    "type": "boolean"
                },
                "can_update_status": {
                    "type": "boolean"
                },
                "deskripsi_intervensi": {
                    "type": "string"
                },
                "hasil_intervensi": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_balita": {
                    "type": "string"
                },
                "id_intervensi": {
                    "type": "string"
                },
                "jenis_intervensi": {
                    "description": "Intervensi Info",
                    "type": "string"
                },
                "jenis_kelamin_balita": {
                    "type": "string"
                },
                "jumlah_laporan_terkait": {
                    "description": "Related Reports",
                    "type": "integer"
                },
                "kecamatan": {
                    "type": "string"
                },
                "kelurahan": {
                    "type": "string"
                },
                "nama_ayah": {
                    "type": "string"
                },
                "nama_balita": {
                    "type": "string"
                },
                "nama_ibu": {
                    "type": "string"
                },
                "nomor_kk": {
                    "description": "Keluarga Info",
                    "type": "string"
                },
                "status_gizi_terakhir": {
                    "description": "Latest Medical Info",
                    "type": "string"
                },
                "status_intervensi": {
                    "type": "string"
                },
                "status_laporan_aktif": {
                    "type": "string"
                },
                "tanggal_intervensi": {
                    "type": "string"
                },
                "tanggal_lahir_balita": {
                    "type": "string"
                },
                "tanggal_pemeriksaan_terakhir": {
                    "type": "string"
                },
                "tanggal_penugasan": {
                    "description": "Assignment Info",
                    "type": "string"
                },
                "tinggi_badan_terakhir": {
                    "type": "string"
                },
                "umur_balita": {
                    "type": "string"
                }
            }
        },
        "healthworker.getAllAssignedIntervensiResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/healthworker.assignedIntervensiResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "object.GeoJSONFeature": {
            "type": "object",
            "properties": {
                "geometry": {
                    "$ref": "#/definitions/object.GeoJSONGeometry"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": true
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "object.GeoJSONFeatureCollection": {
            "type": "object",
            "properties": {
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.GeoJSONFeature"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "object.GeoJSONGeometry": {
            "type": "object",
            "properties": {
                "coordinates": {},
                "type": {
                    "type": "string"
                }
            }
        },
        "object.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.2",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Stunting Web API",
	Description:      "API for managing stunting data",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
